{"version":3,"sources":["components/common/IconTextNotice.js","components/Inputs/OrderStatuses.js","views/Orders/View.js","components/Orders/ProductsInfo.js","components/Orders/StaticMap.js","components/Orders/OrderHistory.js","components/Orders/InvoicePrint.js"],"names":["IconTextNotice","Icon","text","color","onTryAgain","t","useTranslation","padding","className","style","fontSize","opacity","variant","onClick","endIcon","timeout","OrderStatuses","initialValue","name","getResult","touched","serverError","useState","statuses","setStatuses","dispatch","useDispatch","orders","useSelector","state","fetchStatuses","useCallback","a","getOrderStatuses","stats","fetchedStats","length","map","s","value","order_status_id","code","fireSnake","useEffect","setTimeout","clearTimeout","options","label","validity","status_id","status","find","getStatusCode","loading","itemLoading","required","setTouched","ProductsInfo","products","totals","currency","toPrint","TableContainer","component","Paper","Typography","align","Table","size","TableHead","TableRow","TableCell","TableBody","prod","key","order_product_id","Box","title","option","Chip","price_code","classes","price","quantity","total","i","colSpan","rowSpan","StaticMap","lat","lng","height","width","i18n","dir","language","position","zIndex","margin","href","target","rel","display","bootstrapURLKeys","Globals","settings","google_api","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","maps","myLatlng","LatLng","Marker","apiIsLoaded","initialState","comment","tracking","company","status_code","OrderHistory","history","onAdd","setState","resetVals","setResetVals","theme","useTheme","handleState","prev","handleAdd","body","his","css","primary_light","format","Date","date_added","locale","arSA","Grid","container","item","xs","md","sm","Input","min","Button","startIcon","ButtonSpinner","InvoicePrint","reff","order","auth","ref","direction","siteName","invoice_no","spacing","elevation","user","Divider","light","mobile","payment_method","receiver","country","city","line1","View","id","match","params","setOrder","mounted","setMounted","printRef","useRef","fetchOrder","getOrder","fetchedProd","msg","message","handleAddHistory","addOrderHistory","order_id","_history","concat","tracking_company","handlePrint","useReactToPrint","content","current","errors","ErrorOutlineIcon","IconButton","points","TableSkeleton","col","row"],"mappings":"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","file":"static/js/33.63f7c989.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\n\nconst IconTextNotice = ({ Icon, text, color, onTryAgain }) => {\n  const { t } = useTranslation();\n  return (\n    <Box padding={5} className=\"center\">\n      <Icon\n        color={color || \"primary\"}\n        style={{ fontSize: 200, opacity: 0.1 }}\n      />\n      <Typography variant=\"body2\">{text}</Typography>\n      {onTryAgain && (\n        <Box className=\"m\">\n          <Button\n            onClick={onTryAgain}\n            color=\"primary\"\n            variant=\"outlined\"\n            endIcon={<CachedIcon />}\n          >\n            {t(\"common:tryagain\")}\n          </Button>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default IconTextNotice;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getOrderStatuses, fireSnake } from \"../../store//actions\";\nimport { useTranslation } from \"react-i18next\";\nimport SelectInput from \"./SelectInput\";\n\nlet timeout;\nconst OrderStatuses = ({\n  initialValue,\n  name,\n  getResult,\n  touched,\n  serverError,\n}) => {\n  const [statuses, setStatuses] = useState([]);\n  const dispatch = useDispatch();\n  const orders = useSelector((state) => state.orders);\n  const { t } = useTranslation();\n\n  const fetchStatuses = useCallback(async () => {\n    try {\n      const stats = await dispatch(getOrderStatuses());\n      let fetchedStats = [];\n      if (stats.length) {\n        fetchedStats = stats.map((s) => {\n          return {\n            value: s.order_status_id,\n            text: s.text,\n            code: s.code,\n          };\n        });\n      }\n      setStatuses(fetchedStats);\n    } catch (err) {\n      dispatch(fireSnake(\"warning\", t(\"orders:fetch_status_err\")));\n    }\n  }, [dispatch, t]);\n\n  useEffect(() => {\n    timeout = setTimeout(() => {\n      fetchStatuses();\n    }, 0);\n    return () => clearTimeout(timeout);\n  }, [fetchStatuses]);\n\n  const getStatusCode = (status_id) => {\n    const status = statuses.find((s) => s.value === status_id);\n    if (status) {\n      return status.code;\n    }\n    return \"unknown\";\n  };\n  return (\n    <SelectInput\n      options={[{ value: \" \", text: t(\"common:all\") }, ...statuses]}\n      name={name}\n      label={t(\"common:status\")}\n      initialValue={initialValue || \" \"}\n      getResult={(value, validity, name) =>\n        getResult(value, validity, name, getStatusCode(value))\n      }\n      loading={orders.itemLoading}\n      required\n      setTouched={touched}\n      serverError={serverError}\n    />\n  );\n};\n\nexport default OrderStatuses;\n","import React, {\n  useEffect,\n  useCallback,\n  Fragment,\n  useState,\n  useRef,\n} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getOrder, addOrderHistory, fireSnake } from \"../../store/actions\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Typography,\n  Paper,\n  Grid,\n  Divider,\n  Box,\n  IconButton,\n} from \"@material-ui/core\";\nimport TableSkeleton from \"../../components/common/TableSkeleton\";\nimport { format } from \"date-fns\";\nimport { arSA } from \"date-fns/locale\";\nimport i18n from \"../../i18n\";\nimport IconTextNotice from \"../../components/common/IconTextNotice\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\nimport ProductsInfo from \"../../components/Orders/ProductsInfo\";\nimport StaticMap from \"../../components/Orders/StaticMap\";\nimport OrderHistory from \"../../components/Orders/OrderHistory\";\nimport PrintRoundedIcon from \"@material-ui/icons/PrintRounded\";\nimport { useReactToPrint } from \"react-to-print\";\nimport InvoicePrint from \"../../components/Orders/InvoicePrint\";\n\nlet timeout;\n\nconst View = ({ match }) => {\n  const { id } = match.params;\n  const [order, setOrder] = useState(null);\n  const [mounted, setMounted] = useState(false);\n  const dispatch = useDispatch();\n  const orders = useSelector((state) => state.orders);\n  const { t } = useTranslation();\n  const printRef = useRef();\n\n  const fetchOrder = useCallback(async () => {\n    setMounted(false);\n    try {\n      const fetchedProd = await dispatch(getOrder(id));\n      setOrder(fetchedProd);\n    } catch (err) {\n      let msg = err.message || t(\"orders:order_not_found\", { id: id });\n      dispatch(fireSnake(\"error\", msg));\n    } finally {\n      setMounted(true);\n    }\n  }, [id, dispatch, t]);\n\n  useEffect(() => {\n    timeout = setTimeout(() => {\n      if (id) {\n        fetchOrder();\n      }\n    }, 0);\n    return () => clearTimeout(timeout);\n  }, [id, fetchOrder]);\n\n  const handleAddHistory = async (history) => {\n    try {\n      const _history = await dispatch(addOrderHistory(order.order_id, history));\n      setOrder((prev) => {\n        return {\n          ...prev,\n          history: prev.history.concat(_history),\n          tracking: history.tracking || prev.tracking,\n          tracking_company: history.company || prev.tracking_company,\n        };\n      });\n    } catch (err) {\n      let msg = err.message || t(\"orders:fail_add_history\");\n      dispatch(fireSnake(\"error\", msg));\n    }\n  };\n\n  const handlePrint = useReactToPrint({ content: () => printRef.current });\n\n  return (\n    <Fragment>\n      <Typography align=\"center\" variant=\"h4\" className=\"py-1\">\n        {t(\"orders:order_detail\")}\n      </Typography>\n      {!mounted ? (\n        <Paper>\n          <TableSkeleton col={2} row={2} />\n          <TableSkeleton row={2} />\n        </Paper>\n      ) : orders.errors ? (\n        <IconTextNotice\n          text={orders.errors.message || t(\"common:uncommon_err\")}\n          Icon={ErrorOutlineIcon}\n          onTryAgain={fetchOrder}\n        />\n      ) : (\n        <Fragment>\n          <Grid container spacing={1}>\n            {/* Order Info */}\n            <Grid item md={6} sm={12} xs={12}>\n              <Paper className=\"p\">\n                <Box className=\"flex align-items-center flex-justify-between\">\n                  <Typography variant=\"h4\" className=\"py\">\n                    {t(\"orders:order_info\")}\n                  </Typography>\n                  <IconButton onClick={handlePrint}>\n                    <PrintRoundedIcon color=\"primary\" />\n                  </IconButton>\n                </Box>\n\n                <Divider variant=\"middle\" />\n                <Box height={10} />\n                <Typography variant=\"body2\" className=\"xp\">\n                  <b>{t(\"orders:invoice_no\")}</b>: {order.invoice_no}\n                </Typography>\n                <Typography variant=\"body2\" className=\"xp\">\n                  <b>{t(\"orders:user\")}</b>: {order.user}\n                </Typography>\n                <Typography className=\"flex xp\" variant=\"body2\">\n                  <b>{t(\"common:mobile\")}</b>:\n                  <span className=\"ltr px\">{order.mobile}</span>\n                </Typography>\n                <Typography variant=\"body2\" className=\"xp\">\n                  <b>{t(\"orders:payment_method\")}</b>: {order.payment_method}\n                </Typography>\n                <Typography variant=\"body2\">\n                  <b>{t(\"orders:order_date\")}</b>:{\" \"}\n                  {format(\n                    new Date(order.date_added),\n                    \"yyyy MMMM dd - hh:mm:ss aaaa\",\n                    { locale: i18n.language === \"ar\" ? arSA : \"\" }\n                  )}\n                </Typography>\n                <Typography variant=\"body2\" className=\"xp\">\n                  <b>{t(\"common:status\")}</b>: {order.status}\n                </Typography>\n                <Typography variant=\"body2\" className=\"xp\">\n                  <b>{t(\"orders:tracking\")}</b>: {order.tracking}\n                </Typography>\n                <Typography variant=\"body2\" className=\"xp\">\n                  <b>{t(\"orders:tracking_company\")}</b>:{\" \"}\n                  {order.tracking_company}\n                </Typography>\n                <Typography variant=\"body2\">\n                  <b>{t(\"orders:earned_points\")}</b>: {order.points}\n                </Typography>\n                <Box height={27} />\n              </Paper>\n            </Grid>\n\n            {/* Receiver Info */}\n            <Grid item md={6} sm={12} xs={12}>\n              <Paper className=\"p\">\n                <Typography variant=\"h4\" className=\"py\">\n                  {t(\"orders:receiver_info\")}\n                </Typography>\n                <Divider variant=\"middle\" />\n                <Box height={10} />\n                <Typography variant=\"body2\">\n                  <b>{t(\"orders:receiver_name\")}</b>: {order.receiver.name}\n                </Typography>\n                <Typography className=\"flex\" variant=\"body2\">\n                  <b>{t(\"orders:receiver_mobile\")}</b>:\n                  <span className=\"ltr px\">{order.receiver.mobile}</span>\n                </Typography>\n                <Typography variant=\"body2\">\n                  <b>{t(\"orders:receiver_address\")}</b>:{\" \"}\n                  {`${order.receiver.country} - ${order.receiver.city} - ${order.receiver.line1}`}\n                </Typography>\n                <StaticMap lat={order.receiver.lat} lng={order.receiver.lng} />\n              </Paper>\n            </Grid>\n          </Grid>\n\n          {/* Products */}\n          <ProductsInfo\n            products={order.products}\n            totals={order.totals}\n            currency={order.currency}\n          />\n\n          {/* History */}\n          <OrderHistory\n            history={order.history}\n            onAdd={handleAddHistory}\n            loading={orders.itemLoading}\n          />\n\n          {/* Print Template */}\n          <div className=\"printOnly\">\n            <InvoicePrint reff={printRef} order={order} />\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\n// const Marker = (props) => {\n//   return <PersonPinCircleRoundedIcon fontSize=\"large\" color=\"primary\" />;\n// };\n\nexport default View;\n","import {\n  Box,\n  Chip,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ProductsInfo = ({ products, totals, currency, toPrint }) => {\n  const { t } = useTranslation();\n  return (\n    <TableContainer component={Paper} className=\"my-1\">\n      {!toPrint && (\n        <Typography align=\"center\" className=\"py\" variant=\"h4\">\n          {t(\"orders:order_products\")}\n        </Typography>\n      )}\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <Typography className=\"bold\" variant=\"body2\">\n                {t(\"orders:product\")}\n              </Typography>\n            </TableCell>\n            <TableCell align=\"right\">\n              <Typography className=\"bold\" variant=\"body2\">\n                {t(\"orders:price\")}\n              </Typography>\n            </TableCell>\n            <TableCell align=\"right\">\n              <Typography className=\"bold\" variant=\"body2\">\n                {t(\"orders:quantity\")}\n              </Typography>\n            </TableCell>\n            <TableCell align=\"right\">\n              <Typography className=\"bold\" variant=\"body2\">\n                {t(\"orders:total\")}\n              </Typography>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {products.map((prod) => (\n            <TableRow key={prod.order_product_id}>\n              <TableCell>\n                <Box className=\"flex align-items-center flex-justify-between\">\n                  <Typography variant=\"body2\">{prod.title}</Typography>\n                  {prod.option && (\n                    <Chip\n                      title={prod.option}\n                      label={prod.option}\n                      size=\"small\"\n                      className=\"mx\"\n                      color=\"primary\"\n                    />\n                  )}\n                </Box>\n              </TableCell>\n              <TableCell align=\"right\">\n                {(prod.price_code === \"specialprice\" ||\n                  prod.price_code === \"wholesaleprice\") && (\n                  <Chip\n                    title={t(`orders:${prod.price_code}`)}\n                    label={t(`orders:${prod.price_code}`)}\n                    size=\"small\"\n                    className=\"mx\"\n                    color=\"secondary\"\n                    classes={{ label: \"text-smaller\" }}\n                  />\n                )}\n                <Typography variant=\"body2\" component=\"span\">\n                  {prod.price + \" \" + currency}\n                </Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography variant=\"body2\" component=\"span\">\n                  {prod.quantity}\n                </Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography variant=\"body2\" component=\"span\">\n                  {prod.total + \" \" + currency}\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n          {totals.map((total, i) => (\n            <TableRow key={i}>\n              {i === 0 && <TableCell colSpan={2} rowSpan={totals.length} />}\n\n              <TableCell>\n                <Typography variant=\"body2\">{total.text}</Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography variant=\"body2\">\n                  {total.value + \" \" + currency}\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default ProductsInfo;\n","import React from \"react\";\nimport GoogleMap from \"google-map-react\";\nimport Globals from \"../../util/globals\";\nimport DirectionsRoundedIcon from \"@material-ui/icons/DirectionsRounded\";\nimport { Paper } from \"@material-ui/core\";\nimport i18n from \"../../i18n\";\n// import PersonPinCircleRoundedIcon from \"@material-ui/icons/PersonPinCircleRounded\";\n\nconst StaticMap = ({ lat, lng, height = 200 }) => {\n  const apiIsLoaded = (map, maps, lat, lng) => {\n    var myLatlng = new maps.LatLng(lat, lng);\n    new maps.Marker({\n      position: myLatlng,\n      map: map,\n    });\n  };\n\n  return (\n    <div\n      style={{ height: height, width: \"100%\" }}\n      className={`py flex ${\n        i18n.dir(i18n.language) === \"rtl\"\n          ? \"flex-justify-end\"\n          : \"flex-justify-start\"\n      }`}\n    >\n      <Paper\n        style={{\n          position: \"absolute\",\n          zIndex: 9,\n          // left: \"4%\",\n          margin: 4,\n        }}\n      >\n        <a\n          href={`https://www.google.com/maps/dir/?api=1&destination=${lat},${lng}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <DirectionsRoundedIcon\n            fontSize=\"large\"\n            color=\"error\"\n            style={{ display: \"flex\" }}\n          />\n        </a>\n      </Paper>\n      <GoogleMap\n        bootstrapURLKeys={{ key: Globals.settings.google_api }}\n        defaultCenter={{\n          lat: lat,\n          lng: lng,\n        }}\n        defaultZoom={13}\n        yesIWantToUseGoogleMapApiInternals\n        onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps, lat, lng)}\n      />\n    </div>\n  );\n};\n\nexport default StaticMap;\n","import {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport { format } from \"date-fns\";\nimport { arSA } from \"date-fns/locale\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport i18n from \"../../i18n\";\nimport { fireSnake } from \"../../store/actions\";\nimport Input from \"../Inputs/Input\";\nimport OrderStatuses from \"../Inputs/OrderStatuses\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport ButtonSpinner from \"../../components/UI/Spinners/ButtonSpinner\";\n\nconst initialState = {\n  status_id: {\n    value: \" \",\n    validity: false,\n  },\n  comment: {\n    value: \"\",\n    validity: true,\n  },\n  tracking: {\n    value: \"\",\n    validity: false,\n  },\n  company: {\n    value: \"\",\n    validity: false,\n  },\n  status_code: {\n    value: \"\",\n    validity: true,\n  },\n};\n\nconst OrderHistory = ({ history, onAdd, loading }) => {\n  const [state, setState] = useState(initialState);\n  const [touched, setTouched] = useState(false);\n  const [resetVals, setResetVals] = useState(false);\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const handleState = (value, validity, name, code) => {\n    setState((prev) => {\n      if (name === \"status_id\") {\n        return {\n          ...prev,\n          [name]: { value: value, validity: !!value },\n          status_code: { value: code, validity: true },\n          tracking: { ...prev.tracking, validity: code !== \"shipped\" },\n          company: { ...prev.company, validity: code !== \"shipped\" },\n        };\n      } else {\n        return {\n          ...prev,\n          [name]: { value: value, validity: validity },\n        };\n      }\n    });\n  };\n\n  const handleAdd = async () => {\n    let body = {};\n    for (const key in state) {\n      body = { ...body, [key]: state[key].value };\n      if (!state[key].validity) {\n        setTouched(true);\n        return dispatch(fireSnake(\"error\", t(\"common:complete_red_input\")));\n      }\n    }\n    try {\n      await onAdd(body);\n      //Fource Reset\n      setState(initialState);\n      setResetVals(true);\n      setTouched(false);\n    } catch (error) {\n      //\n    }\n  };\n  useEffect(() => {\n    if (resetVals) {\n      setResetVals(false);\n    }\n  }, [resetVals]);\n\n  return (\n    <TableContainer component={Paper} className=\"py\">\n      <Typography align=\"center\" className=\"py\" variant=\"h4\">\n        {t(\"orders:order_history\")}\n      </Typography>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <Typography className=\"bold\" variant=\"body2\">\n                {t(\"common:status\")}\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography className=\"bold\" variant=\"body2\">\n                {t(\"orders:comment\")}\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography className=\"bold\" variant=\"body2\">\n                {t(\"orders:date\")}\n              </Typography>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {history.map((his, i) => (\n            <TableRow\n              key={i}\n              className={i % 2 > 0 ? theme.css.primary_light : \"\"}\n            >\n              <TableCell>\n                <Typography variant=\"body2\">{his.status}</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography variant=\"body2\">{his.comment}</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography variant=\"body2\">\n                  {format(\n                    new Date(his.date_added),\n                    \"yyyy MMMM dd - hh:mm:ss aaaa\",\n                    {\n                      locale: i18n.language === \"ar\" ? arSA : \"\",\n                    }\n                  )}\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      {!resetVals && (\n        <Grid container className=\"p-1\">\n          <Grid item xs={12}>\n            <Typography align=\"center\" className=\"py\" variant=\"h4\">\n              {t(\"orders:add_history\")}\n            </Typography>\n          </Grid>\n          <Grid item className=\"xp\" md={3} sm={6} xs={6}>\n            <OrderStatuses\n              name=\"status_id\"\n              initialValue={state.status_id.value}\n              getResult={handleState}\n              touched={touched}\n              serverError={\n                touched &&\n                !state.status_id.validity &&\n                t(\"orders:choose_status_id\")\n              }\n            />\n          </Grid>\n          <Grid\n            item\n            className=\"xp\"\n            md={state.status_code.value === \"shipped\" ? 3 : 9}\n            sm={6}\n            xs={6}\n          >\n            <Input\n              label={t(\"orders:comment\")}\n              name=\"comment\"\n              initialValue={state.comment.value}\n              getResult={handleState}\n            />\n          </Grid>\n          {state.status_code.value === \"shipped\" && (\n            <>\n              <Grid item className=\"xp\" md={3} sm={6} xs={6}>\n                <Input\n                  label={t(\"orders:tracking\")}\n                  name=\"tracking\"\n                  initialValue={state.tracking.value}\n                  getResult={handleState}\n                  required\n                  min={8}\n                  setTouched={touched}\n                />\n              </Grid>\n              <Grid item className=\"xp\" md={3} sm={6} xs={6}>\n                <Input\n                  label={t(\"orders:company\")}\n                  name=\"company\"\n                  initialValue={state.company.value}\n                  getResult={handleState}\n                  required\n                  min={2}\n                  setTouched={touched}\n                />\n              </Grid>\n            </>\n          )}\n        </Grid>\n      )}\n      <Box className=\"center\">\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={handleAdd}\n          startIcon={<AddRoundedIcon />}\n          endIcon={loading ? <ButtonSpinner /> : null}\n        >\n          {t(\"orders:add_his\")}\n        </Button>\n      </Box>\n    </TableContainer>\n  );\n};\n\nexport default OrderHistory;\n","import { Divider, Grid, Paper, Typography } from \"@material-ui/core\";\nimport { format } from \"date-fns\";\nimport { arSA } from \"date-fns/locale\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport i18n from \"../../i18n\";\nimport ProductsInfo from \"./ProductsInfo\";\n\nconst InvoicePrint = ({ reff, order }) => {\n  const { t } = useTranslation();\n  const auth = useSelector((state) => state.auth);\n  return (\n    <div\n      ref={reff}\n      className=\"p-2\"\n      style={{ direction: i18n.dir(i18n.language) }}\n    >\n      <Typography variant=\"h4\" className=\"py\">\n        {auth.settings.siteName}\n      </Typography>\n      <Typography variant=\"h4\" align=\"center\" className=\"py\">\n        {t(\"orders:invoice\")}\n      </Typography>\n      <Typography variant=\"caption\" component=\"div\" align=\"right\">\n        {`${t(\"orders:invoice_no\")}: ${order.invoice_no}`}\n      </Typography>\n      <Typography variant=\"caption\" component=\"div\" align=\"right\">\n        {`${t(\"orders:date\")}: ${format(\n          new Date(order.date_added),\n          \"yyyy MMMM dd - hh:mm:ss aaaa\",\n          { locale: i18n.language === \"ar\" ? arSA : \"\" }\n        )}`}\n      </Typography>\n      <Grid container spacing={1} className=\"py-1\">\n        <Grid item xs={6}>\n          <Paper elevation={0} className=\"p border-lighter\">\n            <Typography component=\"div\" className=\"xp\">\n              {t(\"orders:user\")}: {order.user}\n              <Divider light />\n            </Typography>\n            <Typography component=\"div\" className=\"flex xp\">\n              {t(\"common:mobile\")}:{\" \"}\n              <span className=\"ltr px\">{order.mobile}</span>\n            </Typography>\n            <Divider light />\n            <Typography component=\"div\" className=\"xp\">\n              {t(\"orders:payment_method\")}: {order.payment_method}\n              <Divider light />\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper elevation={0} className=\"p border-lighter\">\n            <Typography component=\"div\" className=\"xp\">\n              {t(\"orders:receiver_name\")}: {order.receiver.name}\n              <Divider light />\n            </Typography>\n            <Typography component=\"div\" className=\"flex xp\">\n              {t(\"orders:receiver_mobile\")}:{\" \"}\n              <span className=\"ltr px\">{order.receiver.mobile}</span>\n            </Typography>\n            <Divider light />\n            <Typography component=\"div\" className=\"xp\">\n              {t(\"orders:receiver_address\")}:{\" \"}\n              {`${order.receiver.country} - ${order.receiver.city} - ${order.receiver.line1}`}\n              <Divider light />\n            </Typography>\n          </Paper>\n        </Grid>\n      </Grid>\n\n      <ProductsInfo\n        products={order.products}\n        totals={order.totals}\n        currency={order.currency}\n        toPrint\n      />\n    </div>\n  );\n};\n\nexport default InvoicePrint;\n"],"sourceRoot":""}