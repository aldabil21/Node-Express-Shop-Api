{"version":3,"sources":["components/Inputs/IosSwitch.js","../node_modules/@material-ui/icons/EditRounded.js","util/generals.js","../node_modules/@material-ui/icons/AddRounded.js","components/common/Tabs.js","views/Attributes/AddEdit.js","components/Attributes/AttributeInfo.js"],"names":["SwitchStyle","withStyles","theme","root","width","height","padding","margin","spacing","switchBase","transform","color","palette","common","white","backgroundColor","primary","main","opacity","border","content","i18next","t","display","fontSize","contrastText","secondary","light","justifyContent","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","focusVisibleClassName","disableRipple","disabled","IosSwitch","label","name","state","onChange","required","loading","control","e","value","target","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","isError","errors","param","errs","Array","isErr","length","find","err","msg","TabPanel","children","index","other","component","role","hidden","id","aria-labelledby","p","useStyles","makeStyles","flexGrow","background","paper","alignSelf","tabs","borderBottom","divider","tab","minWidth","ScrollableTabsButtonAuto","variant","setTab","title","className","indicatorColor","textColor","scrollButtons","map","i","key","onClick","timeout","AttributeInfo","descriptionResult","descriptions","touched","attributes","sort_order","status","getResult","lngs","Globals","settings","languages","useState","code","DescTab","setDescTab","useTranslation","lng","language","Tabs","Box","Typography","align","desc","Grid","container","item","sm","xs","Input","initialValue","args","min","setTouched","serverError","data","decimal","mathMin","descriptionState","validity","initialState","attribute","description","ds","existed","fd","AddEdit","history","isEdit","match","params","editLoading","setEditLoading","setState","useSelector","dispatch","useDispatch","fetchAttribute","useCallback","a","actions","fetchedAttribute","message","replace","useEffect","setTimeout","clearTimeout","handleSubmit","body","push","section","l","Paper","TableSkeleton","row","col","prev","Button","size","endIcon","ButtonSpinner","startIcon","style"],"mappings":"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","file":"static/js/28.5945c085.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport i18next from \"../../i18n\";\n\nconst SwitchStyle = withStyles((theme) => ({\n  root: {\n    width: 55,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(29px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: theme.palette.primary.main,\n        opacity: 1,\n        border: \"none\",\n        \"&:after\": {\n          content: `\"${i18next.t(\"common:on\")}\"`,\n          display: \"flex\",\n          fontSize: \"0.8rem\",\n          padding: \"4px 6px\",\n          color: theme.palette.primary.contrastText,\n        },\n        \"&:before\": {\n          display: \"none\",\n        },\n      },\n    },\n    \"& + $track\": {\n      backgroundColor: theme.palette.secondary.light,\n      opacity: 1,\n      border: \"none\",\n      \"&:after\": {\n        display: \"none\",\n      },\n      \"&:before\": {\n        content: `\"${i18next.t(\"common:off\")}\"`,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        fontSize: \"0.8rem\",\n        padding: \"4px 6px\",\n        color: theme.palette.secondary.contrastText,\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: theme.palette.primary.main,\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      disabled={props.disabled}\n      {...props}\n    />\n  );\n});\n\nexport default function IosSwitch({\n  label,\n  name,\n  state,\n  onChange,\n  required,\n  loading,\n}) {\n  return (\n    <FormControlLabel\n      control={\n        <SwitchStyle\n          checked={state > 0}\n          onChange={(e) => {\n            const value = e.target.checked;\n            const validity = required ? !!value : true;\n            return onChange(value ? 1 : 0, validity, name);\n          }}\n          name={name}\n          disabled={loading}\n        />\n      }\n      label={label}\n    />\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.46v3.04c0 .28.22.5.5.5h3.04c.13 0 .26-.05.35-.15L17.81 9.94l-3.75-3.75L3.15 17.1c-.1.1-.15.22-.15.36zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'EditRounded');\n\nexports.default = _default;","import i18n from \"../i18n\";\n\nexport const isError = (errors, param) => {\n  const errs =\n    errors && errors instanceof Array ? errors : Array(errors ? errors : \"\");\n  const isErr = errs.length && errs.find((err) => err.param === param);\n  if (isErr) {\n    return isErr.msg;\n  }\n  return false;\n};\n\nexport const IfInputsHasErrors = (toCheckState, excludes) => {\n  let errorFields = [];\n  for (let key in toCheckState) {\n    if (!(excludes || []).some((s) => s === key)) {\n      if (!toCheckState[key].validity) {\n        errorFields.push(\n          toCheckState[key].label.props\n            ? toCheckState[key].label.props\n            : toCheckState[key].label\n        );\n      }\n    }\n  }\n  if (errorFields.length > 0) {\n    const transErrs = errorFields.map((err) =>\n      err.ns ? i18n.t(err.ns + \":\" + err.text) : i18n.t(\"common:\" + err)\n    );\n    return transErrs;\n  }\n  return false;\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 13h-5v5c0 .55-.45 1-1 1s-1-.45-1-1v-5H6c-.55 0-1-.45-1-1s.45-1 1-1h5V6c0-.55.45-1 1-1s1 .45 1 1v5h5c.55 0 1 .45 1 1s-.45 1-1 1z\"\n}), 'AddRounded');\n\nexports.default = _default;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    alignSelf: \"center\",\n  },\n  tabs: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  tab: {\n    minWidth: \"auto\",\n  },\n}));\n\nexport default function ScrollableTabsButtonAuto({\n  tabs,\n  variant,\n  value,\n  setTab,\n  title,\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {title && title}\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"scrollable\"\n        scrollButtons=\"on\"\n        className={classes.tabs}\n        // centered\n      >\n        {tabs.map((tab, i) => (\n          <Tab\n            key={i}\n            label={tab.label}\n            // icon={tab.icon}\n            value={tab.id}\n            {...a11yProps(i)}\n            onClick={() => setTab(tab.id)}\n            // className={classes.tab}\n          />\n        ))}\n      </Tabs>\n      {tabs.map(\n        (tab, i) =>\n          tab.component && (\n            <TabPanel key={i} value={value} index={tab.id}>\n              {tab.component}\n            </TabPanel>\n          )\n      )}\n    </div>\n  );\n}\n","import React, { useState, useCallback, useEffect, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport Globals from \"../../util/globals\";\nimport * as actions from \"../../store/actions\";\nimport { Typography, Grid, Paper, Box, Button } from \"@material-ui/core\";\nimport TableSkeleton from \"../../components/common/TableSkeleton\";\nimport AttributeInfo from \"../../components/Attributes/AttributeInfo\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport ButtonSpinner from \"../../components/UI/Spinners/ButtonSpinner\";\n\nconst descriptionState = () =>\n  Globals.settings.languages.map((lng) => {\n    return {\n      language: lng.code,\n      title: {\n        value: \"\",\n        validity: false,\n      },\n    };\n  });\n\nconst initialState = (attribute) => {\n  return {\n    description: attribute\n      ? descriptionState().map((ds) => {\n          const existed = attribute.description.find(\n            (fd) => fd.language === ds.language\n          );\n          if (existed) {\n            return {\n              language: ds.language,\n              title: {\n                value: existed.title,\n                validity: !!existed.title,\n              },\n            };\n          } else {\n            return ds;\n          }\n        })\n      : descriptionState(),\n    status: {\n      value: attribute ? attribute.status : 1,\n      validity: true,\n    },\n    sort_order: {\n      value: attribute ? attribute.sort_order + \"\" : \"0\",\n      validity: true,\n    },\n  };\n};\n\nlet timeout;\n\nconst AddEdit = ({ history, match }) => {\n  const isEdit = match.params.id;\n  const [editLoading, setEditLoading] = useState(!!isEdit);\n  const [state, setState] = useState(initialState);\n  const [touched, setTouched] = useState(false);\n  const attributes = useSelector((state) => state.attributes);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const fetchAttribute = useCallback(async () => {\n    try {\n      const fetchedAttribute = await dispatch(actions.getAttribute(isEdit));\n      setState(initialState(fetchedAttribute));\n      setEditLoading(false);\n    } catch (err) {\n      let msg = err.message || t(\"attributes:attribute_not_found\");\n      dispatch(actions.fireSnake(\"error\", msg));\n      history.replace(\"/attributes\");\n    }\n  }, [isEdit, dispatch, t, history]);\n\n  useEffect(() => {\n    if (isEdit) {\n      timeout = setTimeout(() => {\n        fetchAttribute();\n      }, 0);\n    }\n    return () => clearTimeout(timeout);\n  }, [isEdit, fetchAttribute]);\n\n  const handleAttributeDescriptionState = (value, validity, name, lng) => {\n    setState((prev) => {\n      return {\n        ...prev,\n        description: prev.description.map((d) =>\n          d.language === lng\n            ? { ...d, [name]: { value: value, validity: validity } }\n            : d\n        ),\n      };\n    });\n  };\n\n  const handleAttributeState = (value, validity, name) => {\n    setState((prev) => {\n      return {\n        ...prev,\n        [name]: { value: value, validity: validity },\n      };\n    });\n  };\n\n  const handleSubmit = async () => {\n    let body = {};\n    // validate non-nested state\n    for (const key in state) {\n      if (key !== \"description\") {\n        body = { ...body, [key]: state[key].value };\n        if (!state[key].validity) {\n          setTouched(true);\n          return dispatch(\n            actions.fireSnake(\"error\", t(\"common:complete_red_input\"))\n          );\n        }\n      }\n    }\n\n    //validate description\n    let description = [];\n    for (const desc of state.description) {\n      description.push({\n        language: desc[\"language\"],\n        title: desc[\"title\"].value,\n      });\n      for (const key in desc) {\n        if (key !== \"language\" && !desc[key].validity) {\n          setTouched(true);\n          return dispatch(\n            actions.fireSnake(\n              \"error\",\n              t(\"common:complete_red_input_detail\", {\n                section: t(\"attributes:attribute_detail\"),\n                language: Globals.settings.languages.find(\n                  (l) => l.code === desc.language\n                ).language,\n              })\n            )\n          );\n        }\n      }\n    }\n\n    body = {\n      ...body,\n      description: description,\n    };\n\n    try {\n      await dispatch(actions.addEditAttribute(body, isEdit));\n      history.replace(\"/attributes\");\n    } catch (err) {\n      let msg = err.message || t(\"attributes:save_err\");\n      dispatch(actions.fireSnake(\"error\", msg));\n    }\n  };\n\n  return (\n    <Fragment>\n      <Typography align=\"center\" variant=\"h4\" className=\"py-1\">\n        {isEdit\n          ? t(\"attributes:edit_attribute\")\n          : t(\"attributes:add_attribute\")}\n      </Typography>\n      {editLoading ? (\n        <Paper>\n          <TableSkeleton row={4} col={2} />\n        </Paper>\n      ) : (\n        <Fragment>\n          <Grid container spacing={1}>\n            {/* Attribute Description */}\n            <Grid item xs={12}>\n              <Paper className=\"my-1\">\n                <AttributeInfo\n                  descriptions={state.description}\n                  descriptionResult={handleAttributeDescriptionState}\n                  touched={touched}\n                  attributes={attributes}\n                  sort_order={state.sort_order.value}\n                  status={state.status.value}\n                  getResult={handleAttributeState}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n\n          {/* Submit */}\n          <Box className=\"center py-1\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={handleSubmit}\n              endIcon={attributes.loading && <ButtonSpinner />}\n              startIcon={isEdit ? <EditRoundedIcon /> : <AddRoundedIcon />}\n              disabled={attributes.loading}\n              style={{ width: \"80%\" }}\n            >\n              <Typography variant=\"h4\" className=\"py-1\">\n                {isEdit\n                  ? t(\"attributes:edit_attribute\")\n                  : t(\"attributes:add_attribute\")}\n              </Typography>\n            </Button>\n          </Box>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default AddEdit;\n","import React, { Fragment, useState } from \"react\";\nimport Input from \"../Inputs/Input\";\nimport { useTranslation } from \"react-i18next\";\nimport { Grid, Typography, Box } from \"@material-ui/core\";\nimport Globals from \"../../util/globals\";\nimport Tabs from \"../common/Tabs\";\nimport { isError } from \"../../util/generals\";\nimport IosSwitch from \"../Inputs/IosSwitch\";\n\nconst AttributeInfo = ({\n  descriptionResult,\n  descriptions,\n  touched,\n  attributes,\n  sort_order,\n  status,\n  getResult,\n}) => {\n  const lngs = Globals.settings.languages;\n  const [DescTab, setDescTab] = useState(lngs[0].code);\n  const { t } = useTranslation();\n\n  const tabs = lngs.map((lng, i) => {\n    return {\n      id: lng.code,\n      label: lng.language,\n    };\n  });\n\n  return (\n    <Fragment>\n      <Tabs\n        tabs={tabs}\n        value={DescTab}\n        variant=\"standard\"\n        setTab={setDescTab}\n        title={\n          <Box className=\"flex flex-justify-between align-items-center\">\n            <Typography align=\"left\" variant=\"h6\" className=\"p\">\n              {t(\"attributes:attribute_detail\")}\n            </Typography>\n            <IosSwitch state={status} onChange={getResult} name=\"status\" />\n          </Box>\n        }\n      />\n      {descriptions.map((desc, i) => (\n        <Box\n          key={desc.language}\n          className=\"p-1\"\n          hidden={DescTab !== desc.language}\n        >\n          <Typography\n            component=\"div\"\n            className=\"center p\"\n            variant=\"caption\"\n            color=\"textSecondary\"\n          >\n            {t(\"common:required_star\")}\n          </Typography>\n          <Grid container spacing={1}>\n            <Grid item sm={6} xs={12}>\n              <Input\n                label={t(\"attributes:attribute_name\") + \" **\"}\n                initialValue={desc.title.value}\n                name=\"title\"\n                getResult={(...args) =>\n                  descriptionResult(...args, desc.language)\n                }\n                required\n                min={2}\n                setTouched={touched}\n                serverError={isError(\n                  attributes.errors && attributes.errors.data,\n                  `description[${i}].title`\n                )}\n              />\n            </Grid>\n            <Grid item sm={6} xs={12}>\n              <Input\n                label={t(\"attributes:sort_order\")}\n                initialValue={sort_order}\n                name=\"sort_order\"\n                getResult={getResult}\n                required\n                decimal\n                mathMin=\"-1\"\n                setTouched={touched}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default AttributeInfo;\n"],"sourceRoot":""}