{"version":3,"sources":["util/generals.js","../node_modules/@material-ui/icons/Cached.js","components/common/PageError.js","../node_modules/@material-ui/icons/ErrorOutlineRounded.js","views/Auth/RecreatePasswordSquare.js","views/Auth/ForgotPassword.js"],"names":["isError","errors","param","errs","Array","isErr","length","find","err","msg","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","PageError","text","onTryAgain","onTryText","customItem","t","useTranslation","Icon","ErrorOutlineRoundedIcon","padding","className","color","style","fontSize","opacity","variant","onClick","endIcon","initialState","password","validity","label","i18n","langBtns","name","content","RecreatePasswordSquare","React","forwardRef","ref","onNewPassword","useState","state","setState","visible","setVisible","toggleLanguage","useContext","themeContext","auth","useSelector","handleNewPassword","canSubmit","Container","Fade","in","timeout","Box","Grid","container","alignContent","item","md","sm","xs","Paper","elevation","Typography","align","component","Input","getResult","prev","withIcon","type","onKeyDown","k","key","required","min","max","margin","serverError","data","message","Button","disabled","loading","ButtonSpinner","SwitchButtons","buttons","language","val","ForgotPassword","match","history","setLoading","error","setError","theme","useTheme","email","params","token","dispatch","useDispatch","validate","useCallback","a","validateResetPassword","useEffect","pass","recreatePassword","replace","fireSnake","css","gradient_primary","PageSpinner","Slide","direction","unmountOnExit"],"mappings":"mGAAA,4CAEaA,EAAU,SAACC,EAAQC,GAC9B,IAAMC,EACJF,GAAUA,aAAkBG,MAAQH,EAASG,MAAMH,GAAkB,IACjEI,EAAQF,EAAKG,QAAUH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIN,QAAUA,KAC9D,QAAIG,GACKA,EAAMI,M,iCCLjB,IAAIC,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,uOACD,UAEJN,EAAQE,QAAUE,G,iCCjBlB,mGA+BeG,IAzBG,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WACxCC,EAAMC,cAAND,EACFE,EAAOH,GAA0BI,IACvC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,QAAS,EAAGC,UAAU,UACzB,kBAACH,EAAD,CAAMI,MAAM,QAAQC,MAAO,CAAEC,SAAU,IAAKC,QAAS,MACrD,kBAAC,IAAD,CAAYC,QAAQ,SAASd,GAC5BC,GACC,kBAAC,IAAD,CAAKQ,UAAU,KACb,kBAAC,IAAD,CACEM,QAASd,EACTS,MAAM,UACNI,QAAQ,WACRE,QAAS,kBAAC,IAAD,OAERd,GAAaE,EAAE,yB,iCCpB9B,IAAIhB,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,sOACD,uBAEJN,EAAQE,QAAUE,G,iSCIZqB,EAAe,CACnBC,SAAU,CACRzB,MAAO,GACP0B,UAAU,EACVC,MAAOC,IAAKjB,EAAE,qBAIZkB,EAAW,CACf,CAAEC,KAAM,KAAMC,QAAS,4BACvB,CAAED,KAAM,KAAMC,QAAS,6BAwHVC,EArHgBC,IAAMC,YAAW,WAAoBC,GAAS,IAA1BC,EAAyB,EAAzBA,cAAyB,EAChDC,mBAASb,GADuC,mBACnEc,EADmE,KAC5DC,EAD4D,OAE5CF,oBAAS,GAFmC,mBAEnEG,EAFmE,KAE1DC,EAF0D,KAGlEC,EAAmBC,qBAAWC,KAA9BF,eACA/B,EAAMC,cAAND,EACFkC,EAAOC,aAAY,SAACR,GAAD,OAAWA,EAAMO,QAWpCE,EAAoB,WACxB,IAAMtB,EAAWa,EAAMb,SAASzB,MAChCoC,EAAcX,IAGVuB,EAAYV,EAAMb,SAASC,SAEjC,OACE,kBAACuB,EAAA,EAAD,CAAWjC,UAAU,aAAamB,IAAKA,GACrC,kBAACe,EAAA,EAAD,CAAMC,IAAE,EAACC,QAAS,MAChB,kBAACC,EAAA,EAAD,CAAKrC,UAAU,+BACb,kBAACsC,EAAA,EAAD,CAAMC,WAAS,EAACC,aAAa,UAC3B,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC7B,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC3B,kBAACC,EAAA,EAAD,CAAO7C,UAAU,MAAM8C,UAAW,GAChC,kBAACC,EAAA,EAAD,CAAY1C,QAAQ,KAAK2C,MAAM,UAC5BrD,EAAE,wBAEL,kBAAC0C,EAAA,EAAD,CAAKrC,UAAU,MACf,kBAAC+C,EAAA,EAAD,CACE1C,QAAQ,UACR2C,MAAM,SACNC,UAAU,MACVhD,MAAM,gBACND,UAAU,MAETL,EAAE,+BAEL,kBAACuD,EAAA,EAAD,CACEvC,MAAOhB,EAAE,mBACTmB,KAAK,WACLqC,UAxCU,SAACnE,EAAO0B,EAAUI,GAC1CS,GAAS,SAAC6B,GACR,OAAO,2BACFA,GADL,kBAEGtC,EAFH,2BAEeQ,EAAMR,IAFrB,IAE4B9B,QAAO0B,mBAqCvB2C,SACE7B,EACE,kBAAC,IAAD,CACEvB,MAAM,UACNK,QAAS,kBAAMmB,GAAYD,IAC3BxB,UAAU,iBAGZ,kBAAC,IAAD,CACEC,MAAM,WACNK,QAAS,kBAAMmB,GAAYD,IAC3BxB,UAAU,iBAIhBsD,KAAM9B,EAAU,OAAS,WACzB+B,UAAW,SAACC,GAAD,OACTxB,GAAuB,UAAVwB,EAAEC,IAAkB1B,IAAsB,MAEzD2B,UAAQ,EACRC,IAAK,EACLC,IAAK,GACLC,OAAQ,EACRC,YAAa7F,YACX4D,EAAK3D,QAAU2D,EAAK3D,OAAO6F,KADT,cAKrBlC,EAAK3D,QACJ,kBAAC6E,EAAA,EAAD,CACE9C,MAAM,QACNI,QAAQ,YACRL,UAAU,aAET6B,EAAK3D,OAAO8F,SAGjB,kBAAC3B,EAAA,EAAD,CAAKrC,UAAU,eACb,kBAACiE,EAAA,EAAD,CACEhE,MAAM,UACNI,QAAQ,YACR6D,UAAWlC,GAAaH,EAAKsC,QAC7BnE,UAAU,UACVM,QAAS0B,EAAYD,EAAoB,KACzCxB,QAASsB,EAAKsC,SAAW,kBAACC,EAAA,EAAD,OAExBzE,EAAE,oBAIP,kBAAC0C,EAAA,EAAD,CAAKrC,UAAU,aACb,kBAACqE,EAAA,EAAD,CACEC,QAASzD,EACTS,MAAOV,IAAK2D,SACZjE,QAAS,SAACkE,GACJA,IAAQ5D,IAAK2D,UAAU7C,EAAe8C,SAMpD,kBAAClC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,W,0BC/D1B6B,UAnEQ,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAAc,EACftD,oBAAS,GADM,mBACtC8C,EADsC,KAC7BS,EAD6B,OAEnBvD,mBAAS,MAFU,mBAEtCwD,EAFsC,KAE/BC,EAF+B,KAGvCC,EAAQC,cACRC,EAAQP,EAAMQ,OAASR,EAAMQ,OAAOD,MAAQ,GAC5CE,EAAQT,EAAMQ,OAASR,EAAMQ,OAAOC,MAAQ,GAC5CC,EAAWC,cACT1F,EAAMC,cAAND,EAEF2F,EAAWC,sBAAW,sBAAC,sBAAAC,EAAA,+EAEnBJ,EAASK,aAAsBR,EAAOE,IAFnB,sDAIzBL,EAAS,EAAD,IAJiB,uBAMzBF,GAAW,GANc,0EAQ1B,CAACQ,EAAUH,EAAOE,IAErBO,qBAAU,WACRJ,MACC,CAACA,EAAUL,EAAOE,IAErB,IAAM/D,EAAa,uCAAG,WAAOuE,GAAP,SAAAH,EAAA,+EAEZJ,EAASQ,aAAiBX,EAAOE,EAAOQ,IAF5B,OAGlBhB,EAAQkB,QAAQ,KAChBT,EAASU,YAAU,UAAWnG,EAAE,+BAJd,gDAMlByF,EAASU,YAAU,QAAS,KAAI9B,UANd,yDAAH,sDAUnB,OACE,yBACEhE,UAAS,UAAK+E,EAAMgB,IAAIC,iBAAf,kCAER7B,EACC,kBAACtB,EAAA,EAAD,CAAO7C,UAAU,mCACf,kBAACiG,EAAA,EAAD,MACA,kBAAClD,EAAA,EAAD,CAAY/C,UAAU,QACnBL,EAAE,kCAGJwE,GAAWU,EACd,kBAACxC,EAAA,EAAD,CAAKrC,UAAU,+BACb,kBAACV,EAAA,EAAD,CACEC,KAAMsF,EAAMb,QACZxE,WAAY,kBAAMmF,EAAQkB,QAAQ,MAClCpG,UAAWE,EAAE,uBAIjB,kBAACuG,EAAA,EAAD,CACE/D,IAAE,EACFgE,UAAU,OACV/D,QAAS,IAETgE,eAAa,GAEb,kBAAC,EAAD,CAAwBhF,cAAeA","file":"static/js/30.39895091.chunk.js","sourcesContent":["import i18n from \"../i18n\";\n\nexport const isError = (errors, param) => {\n  const errs =\n    errors && errors instanceof Array ? errors : Array(errors ? errors : \"\");\n  const isErr = errs.length && errs.find((err) => err.param === param);\n  if (isErr) {\n    return isErr.msg;\n  }\n  return false;\n};\n\nexport const IfInputsHasErrors = (toCheckState, excludes) => {\n  let errorFields = [];\n  for (let key in toCheckState) {\n    if (!(excludes || []).some((s) => s === key)) {\n      if (!toCheckState[key].validity) {\n        errorFields.push(\n          toCheckState[key].label.props\n            ? toCheckState[key].label.props\n            : toCheckState[key].label\n        );\n      }\n    }\n  }\n  if (errorFields.length > 0) {\n    const transErrs = errorFields.map((err) =>\n      err.ns ? i18n.t(err.ns + \":\" + err.text) : i18n.t(\"common:\" + err)\n    );\n    return transErrs;\n  }\n  return false;\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z\"\n}), 'Cached');\n\nexports.default = _default;","import React from \"react\";\nimport { Box, Typography, Button, Paper } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport ErrorOutlineRoundedIcon from \"@material-ui/icons/ErrorOutlineRounded\";\n\nconst PageError = ({ text, onTryAgain, onTryText, customItem }) => {\n  const { t } = useTranslation();\n  const Icon = customItem ? customItem : ErrorOutlineRoundedIcon;\n  return (\n    <Paper>\n      <Box padding={5} className=\"center\">\n        <Icon color=\"error\" style={{ fontSize: 200, opacity: 0.2 }} />\n        <Typography variant=\"body2\">{text}</Typography>\n        {onTryAgain && (\n          <Box className=\"m\">\n            <Button\n              onClick={onTryAgain}\n              color=\"primary\"\n              variant=\"outlined\"\n              endIcon={<CachedIcon />}\n            >\n              {onTryText || t(\"common:tryagain\")}\n            </Button>\n          </Box>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\nexport default PageError;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 7c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1zm-.01-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm1-3h-2v-2h2v2z\"\n}), 'ErrorOutlineRounded');\n\nexports.default = _default;","import React, { useContext, useState } from \"react\";\nimport {\n  Container,\n  Box,\n  Paper,\n  Typography,\n  Grid,\n  Button,\n  Fade,\n} from \"@material-ui/core\";\nimport themeContext from \"../../theme/themeContext\";\nimport { useTranslation } from \"react-i18next\";\nimport Input from \"../../components/Inputs/Input\";\nimport i18n from \"../../i18n\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { useSelector } from \"react-redux\";\nimport ButtonSpinner from \"../../components/UI/Spinners/ButtonSpinner\";\nimport SwitchButtons from \"../../components/Buttons/SwitchButtons\";\nimport { isError } from \"../../util/generals\";\n\nconst initialState = {\n  password: {\n    value: \"\",\n    validity: false,\n    label: i18n.t(\"common:password\"),\n  },\n};\n\nconst langBtns = [\n  { name: \"ar\", content: \"🇸🇦\" },\n  { name: \"en\", content: \"🇺🇸\" },\n];\n\nconst RecreatePasswordSquare = React.forwardRef(({ onNewPassword }, ref) => {\n  const [state, setState] = useState(initialState);\n  const [visible, setVisible] = useState(false);\n  const { toggleLanguage } = useContext(themeContext);\n  const { t } = useTranslation();\n  const auth = useSelector((state) => state.auth);\n\n  const handleInputResult = (value, validity, name) => {\n    setState((prev) => {\n      return {\n        ...prev,\n        [name]: { ...state[name], value, validity },\n      };\n    });\n  };\n\n  const handleNewPassword = () => {\n    const password = state.password.value;\n    onNewPassword(password);\n  };\n\n  const canSubmit = state.password.validity;\n\n  return (\n    <Container className=\"fullheight\" ref={ref}>\n      <Fade in timeout={1500}>\n        <Box className=\"fullheight flex__centerlize\">\n          <Grid container alignContent=\"center\">\n            <Grid item md={4} sm={3} xs={1} />\n            <Grid item md={4} sm={6} xs={12}>\n              <Paper className=\"p-1\" elevation={3}>\n                <Typography variant=\"h2\" align=\"center\">\n                  {t(\"common:new_password\")}\n                </Typography>\n                <Box className=\"p\" />\n                <Typography\n                  variant=\"caption\"\n                  align=\"center\"\n                  component=\"div\"\n                  color=\"textSecondary\"\n                  className=\"py\"\n                >\n                  {t(\"common:new_password_notice\")}\n                </Typography>\n                <Input\n                  label={t(\"common:password\")}\n                  name=\"password\"\n                  getResult={handleInputResult}\n                  withIcon={\n                    visible ? (\n                      <VisibilityIcon\n                        color=\"primary\"\n                        onClick={() => setVisible(!visible)}\n                        className=\"hoverable-op\"\n                      />\n                    ) : (\n                      <VisibilityOffIcon\n                        color=\"disabled\"\n                        onClick={() => setVisible(!visible)}\n                        className=\"hoverable-op\"\n                      />\n                    )\n                  }\n                  type={visible ? \"text\" : \"password\"}\n                  onKeyDown={(k) =>\n                    canSubmit && k.key === \"Enter\" ? handleNewPassword() : null\n                  }\n                  required\n                  min={5}\n                  max={21}\n                  margin={4}\n                  serverError={isError(\n                    auth.errors && auth.errors.data,\n                    `password`\n                  )}\n                />\n                {auth.errors && (\n                  <Typography\n                    color=\"error\"\n                    variant=\"subtitle2\"\n                    className=\"py center\"\n                  >\n                    {auth.errors.message}\n                  </Typography>\n                )}\n                <Box className=\"center py-1\">\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    disabled={!canSubmit || auth.loading}\n                    className=\"width60\"\n                    onClick={canSubmit ? handleNewPassword : null}\n                    endIcon={auth.loading && <ButtonSpinner />}\n                  >\n                    {t(\"common:confirm\")}\n                  </Button>\n                </Box>\n\n                <Box className=\"center py\">\n                  <SwitchButtons\n                    buttons={langBtns}\n                    state={i18n.language}\n                    onClick={(val) => {\n                      if (val !== i18n.language) toggleLanguage(val);\n                    }}\n                  />\n                </Box>\n              </Paper>\n            </Grid>\n            <Grid item md={4} sm={3} xs={1} />\n          </Grid>\n        </Box>\n      </Fade>\n    </Container>\n  );\n});\n\nexport default RecreatePasswordSquare;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Box, Paper, Slide, Typography, useTheme } from \"@material-ui/core\";\nimport RecreatePasswordSquare from \"./RecreatePasswordSquare\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  fireSnake,\n  recreatePassword,\n  validateResetPassword,\n} from \"../../store/actions\";\nimport PageSpinner from \"../../components/UI/Spinners/PageSpinner\";\nimport { useTranslation } from \"react-i18next\";\nimport PageError from \"../../components/common/PageError\";\n\nconst ForgotPassword = ({ match, history }) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const theme = useTheme();\n  const email = match.params ? match.params.email : \"\";\n  const token = match.params ? match.params.token : \"\";\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const validate = useCallback(async () => {\n    try {\n      await dispatch(validateResetPassword(email, token));\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [dispatch, email, token]);\n\n  useEffect(() => {\n    validate();\n  }, [validate, email, token]);\n\n  const onNewPassword = async (pass) => {\n    try {\n      await dispatch(recreatePassword(email, token, pass));\n      history.replace(\"/\");\n      dispatch(fireSnake(\"success\", t(\"common:pass_reset_success\")));\n    } catch (err) {\n      dispatch(fireSnake(\"error\", err.message));\n    }\n  };\n\n  return (\n    <div\n      className={`${theme.css.gradient_primary} fullheightVH overflow_hidden`}\n    >\n      {loading ? (\n        <Paper className=\"position__centerlize center p-3\">\n          <PageSpinner />\n          <Typography className=\"py-1\">\n            {t(\"common:validate_reset_token\")}\n          </Typography>\n        </Paper>\n      ) : !loading && error ? (\n        <Box className=\"position__centerlize center\">\n          <PageError\n            text={error.message}\n            onTryAgain={() => history.replace(\"/\")}\n            onTryText={t(\"common:back_home\")}\n          />\n        </Box>\n      ) : (\n        <Slide\n          in\n          direction=\"left\"\n          timeout={400}\n          // appear={mode === \"login\"}\n          unmountOnExit\n        >\n          <RecreatePasswordSquare onNewPassword={onNewPassword} />\n        </Slide>\n      )}\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"sourceRoot":""}