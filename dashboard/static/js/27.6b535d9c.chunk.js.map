{"version":3,"sources":["components/Inputs/IosSwitch.js","util/generals.js","components/common/Tabs.js","components/common/DropZone.js","components/Inputs/SelectNative.js","components/Products/ProductAttributes.js","components/Products/ProductInfo.js","components/Products/ProductDetail.js","components/Products/ProductOptions.js","components/Products/ProductWholesales.js","components/Products/ProductCatFilter.js","views/Products/AddEdit.js"],"names":["SwitchStyle","withStyles","theme","root","width","height","padding","margin","spacing","switchBase","transform","color","palette","common","white","backgroundColor","primary","main","opacity","border","content","i18next","t","display","fontSize","contrastText","secondary","light","justifyContent","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","focusVisibleClassName","disableRipple","disabled","IosSwitch","label","name","state","onChange","required","loading","control","e","value","target","isError","errors","param","errs","Array","isErr","length","find","err","msg","TabPanel","children","index","other","component","role","hidden","id","aria-labelledby","p","useStyles","makeStyles","flexGrow","background","paper","alignSelf","tabs","borderBottom","divider","tab","minWidth","ScrollableTabsButtonAuto","variant","setTab","title","className","indicatorColor","textColor","scrollButtons","map","i","key","onClick","container","dropzone","outline","cursor","borderColor","active","marginBottom","marginRight","boxSizing","thumbInner","overflow","img","primaryBG","DropZone","getResult","touched","initialImgs","multiple","maxSize","useState","files","setFiles","setErr","useTranslation","useDropzone","accept","onDropRejected","_","a","onDrop","acceptedFiles","prev","file","Object","assign","preview","URL","createObjectURL","Math","random","getRootProps","getInputProps","isDragActive","thumbs","badgeContent","size","filter","revokeObjectURL","handleRemove","anchorOrigin","horizontal","vertical","src","alt","useEffect","forEach","in","severity","action","SelectNative","options","errMsg","initialValue","setTouched","helperText","serverError","valid","errorMsg","setState","inputLabel","useRef","labelWidth","setLabelWidth","current","offsetWidth","showServerErr","useCallback","fullWidth","error","ref","focused","shrink","onBlur","val","isValid","updated","v","concat","native","op","subheader","text","style","timeout","ProductInfo","descriptions","prodState","lngs","Globals","settings","languages","code","DescTab","setDescTab","lng","language","Tabs","Typography","align","desc","Box","Grid","item","xs","Input","args","min","data","description","multiline","rows","tags","placeholder","meta_title","meta_description","meta_keywords","ProductDetail","quantity","price","points","tax_id","weight","subtract","minimum","maximum","available_at","taxes","useSelector","_taxes","dispatch","useDispatch","fetchTaxes","autocompleteTaxes","md","sm","decimal","mathMin","SelectInput","utils","DateFnsUtils","locale","arLocale","DateTimePicker","inputVariant","cancelLabel","okLabel","format","helperNotice","ProductOptions","removeOption","langTab","setLangTab","option","order_id","alignItems","IconButton","ProductWholesales","wholesales","removeWholesale","ws","ProductAttributes","attributes","removeAttribute","fetchAtts","setLoading","searched","setSearched","handleSuggestAttribute","query","clearTimeout","setTimeout","attributesAutocomplete","result","attribute","Autocomplete","getOptionLabel","selectOnFocus","blurOnSelect","openOnFocus","closeText","loadingText","onFocus","onKeyUp","noOptionsText","renderInput","params","TextField","InputProps","endAdornment","ButtonSpinner","Loader","LinearProgress","marginLeft","ProductCatFilter","categories","filters","cats","setCats","fils","setFils","filState","catState","fetchCats","q","categoriesAutocomplete","_cats","fetchFils","filtersAutocomplete","_filters","c","category_id","f","filter_id","descriptionState","validity","optionsState","option_id","attributeState","setEditState","product","ds","existed","pd","Date","status","image","server","category","pc","pf","po","od","pa","ad","pw","AddEdit","history","isEdit","match","editLoading","setEditLoading","products","fetchProduct","actions","fetchedProd","message","handleProductDetailState","handleSubmit","body","push","section","l","opt","OptionDesc","att","attDesc","attribute_id","JSON","stringify","replace","TableSkeleton","row","col","Paper","d","Button","last","endIcon","startIcon"],"mappings":"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","file":"static/js/27.6b535d9c.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport i18next from \"../../i18n\";\n\nconst SwitchStyle = withStyles((theme) => ({\n  root: {\n    width: 55,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(29px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: theme.palette.primary.main,\n        opacity: 1,\n        border: \"none\",\n        \"&:after\": {\n          content: `\"${i18next.t(\"common:on\")}\"`,\n          display: \"flex\",\n          fontSize: \"0.8rem\",\n          padding: \"4px 6px\",\n          color: theme.palette.primary.contrastText,\n        },\n        \"&:before\": {\n          display: \"none\",\n        },\n      },\n    },\n    \"& + $track\": {\n      backgroundColor: theme.palette.secondary.light,\n      opacity: 1,\n      border: \"none\",\n      \"&:after\": {\n        display: \"none\",\n      },\n      \"&:before\": {\n        content: `\"${i18next.t(\"common:off\")}\"`,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        fontSize: \"0.8rem\",\n        padding: \"4px 6px\",\n        color: theme.palette.secondary.contrastText,\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: theme.palette.primary.main,\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      disabled={props.disabled}\n      {...props}\n    />\n  );\n});\n\nexport default function IosSwitch({\n  label,\n  name,\n  state,\n  onChange,\n  required,\n  loading,\n}) {\n  return (\n    <FormControlLabel\n      control={\n        <SwitchStyle\n          checked={state > 0}\n          onChange={(e) => {\n            const value = e.target.checked;\n            const validity = required ? !!value : true;\n            return onChange(value ? 1 : 0, validity, name);\n          }}\n          name={name}\n          disabled={loading}\n        />\n      }\n      label={label}\n    />\n  );\n}\n","import i18n from \"../i18n\";\n\nexport const isError = (errors, param) => {\n  const errs =\n    errors && errors instanceof Array ? errors : Array(errors ? errors : \"\");\n  const isErr = errs.length && errs.find((err) => err.param === param);\n  if (isErr) {\n    return isErr.msg;\n  }\n  return false;\n};\n\nexport const IfInputsHasErrors = (toCheckState, excludes) => {\n  let errorFields = [];\n  for (let key in toCheckState) {\n    if (!(excludes || []).some((s) => s === key)) {\n      if (!toCheckState[key].validity) {\n        errorFields.push(\n          toCheckState[key].label.props\n            ? toCheckState[key].label.props\n            : toCheckState[key].label\n        );\n      }\n    }\n  }\n  if (errorFields.length > 0) {\n    const transErrs = errorFields.map((err) =>\n      err.ns ? i18n.t(err.ns + \":\" + err.text) : i18n.t(\"common:\" + err)\n    );\n    return transErrs;\n  }\n  return false;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    alignSelf: \"center\",\n  },\n  tabs: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  tab: {\n    minWidth: \"auto\",\n  },\n}));\n\nexport default function ScrollableTabsButtonAuto({\n  tabs,\n  variant,\n  value,\n  setTab,\n  title,\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {title && title}\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"scrollable\"\n        scrollButtons=\"on\"\n        className={classes.tabs}\n        // centered\n      >\n        {tabs.map((tab, i) => (\n          <Tab\n            key={i}\n            label={tab.label}\n            // icon={tab.icon}\n            value={tab.id}\n            {...a11yProps(i)}\n            onClick={() => setTab(tab.id)}\n            // className={classes.tab}\n          />\n        ))}\n      </Tabs>\n      {tabs.map(\n        (tab, i) =>\n          tab.component && (\n            <TabPanel key={i} value={value} index={tab.id}>\n              {tab.component}\n            </TabPanel>\n          )\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport {\n  makeStyles,\n  Box,\n  Badge,\n  Collapse,\n  IconButton,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useTranslation } from \"react-i18next\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst DropZone = ({\n  title,\n  getResult,\n  required,\n  touched,\n  initialImgs,\n  multiple,\n  disabled,\n  maxSize,\n}) => {\n  const classes = useStyles();\n  const [files, setFiles] = useState(initialImgs);\n  const [err, setErr] = useState(null);\n  const { t } = useTranslation();\n\n  const {\n    // acceptedFiles,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n  } = useDropzone({\n    accept: \"image/*\",\n    multiple: multiple,\n    maxSize: maxSize || 120000,\n    onDropRejected: (_, a) => setErr(t(\"common:image_err\")),\n    onDrop: (acceptedFiles) => {\n      setErr(null);\n      setFiles((prev) => {\n        return [\n          ...prev,\n          ...acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n              id: Math.random(),\n            })\n          ),\n        ];\n      });\n    },\n    disabled: disabled,\n  });\n\n  const handleRemove = (file) => {\n    setFiles((prev) => prev.filter((p) => p.id !== file.id));\n    URL.revokeObjectURL(file.preview);\n  };\n\n  const thumbs = files.map((file) => (\n    <Badge\n      key={file.name}\n      badgeContent={\n        <IconButton\n          size=\"small\"\n          className={classes.primaryBG}\n          onClick={() => handleRemove(file)}\n        >\n          <ClearIcon fontSize=\"small\" className=\"text-light\" />\n        </IconButton>\n      }\n      anchorOrigin={{ horizontal: \"left\", vertical: \"top\" }}\n    >\n      <div className={classes.thumb}>\n        <div className={classes.thumbInner}>\n          <img src={file.preview} alt={file.name} className={classes.img} />\n        </div>\n      </div>\n    </Badge>\n  ));\n\n  useEffect(() => {\n    //Submit using useEffect\n    getResult(files, required ? !!files.length : true, \"image\");\n    // Make sure to revoke the data uris to avoid memory leaks\n    return () => {\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    };\n    // eslint-disable-next-line\n  }, [files]);\n\n  useEffect(() => {\n    if (required && touched && !files.length) {\n      setErr(t(\"common:image_err_empty\"));\n    }\n    // eslint-disable-next-line\n  }, [touched, required]);\n\n  return (\n    <section className={classes.container}>\n      <Collapse in={!!err}>\n        <Alert\n          severity=\"error\"\n          className=\"my\"\n          action={\n            <IconButton size=\"small\" onClick={() => setErr(null)}>\n              <ClearIcon fontSize=\"small\" />\n            </IconButton>\n          }\n        >\n          {err}\n        </Alert>\n      </Collapse>\n\n      <Box className=\"flex flex-start flex-wrap\">{thumbs}</Box>\n      {!disabled && (\n        <div\n          {...getRootProps({\n            className: `${classes.dropzone} ${\n              isDragActive ? classes.active : \"\"\n            } py-1 ${disabled ? classes.disabled : \"\"}`,\n          })}\n        >\n          <input {...getInputProps()} />\n          <p className=\"center\">{title}</p>\n        </div>\n      )}\n    </section>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    border: \"1px solid #ccc\",\n    borderRadius: 3,\n    padding: 5,\n  },\n  dropzone: {\n    border: \"2px dashed #ccc\",\n    borderRadius: 3,\n    outline: \"none\",\n    cursor: \"pointer\",\n    \"&:focus\": {\n      border: \"2px dashed\",\n      borderColor: theme.palette.primary.main,\n    },\n  },\n  active: {\n    border: \"2px dashed\",\n    borderColor: theme.palette.primary.main,\n    // background: theme.palette.primary.light,\n  },\n  disabled: {\n    cursor: \"not-allowed\",\n    background: \"#dedede\",\n    color: \"#b5b5b5\",\n  },\n  thumb: {\n    display: \"inline-flex\",\n    borderRadius: 2,\n    border: \"1px solid #eaeaea\",\n    marginBottom: 8,\n    marginRight: 8,\n    width: 100,\n    height: 100,\n    padding: 4,\n    boxSizing: \"border-box\",\n  },\n  thumbInner: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    minWidth: 0,\n    overflow: \"hidden\",\n  },\n  img: {\n    display: \"block\",\n    width: \"auto\",\n    height: \"100%\",\n  },\n  primaryBG: {\n    background: theme.palette.primary.main,\n    \"&:hover\": {\n      background: theme.palette.primary.light,\n    },\n  },\n}));\n\nexport default DropZone;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport {\n  FormControl,\n  FormHelperText,\n  ListSubheader,\n  Select,\n} from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useTranslation } from \"react-i18next\";\n\nconst SelectNative = (props) => {\n  const {\n    options,\n    name,\n    required,\n    getResult,\n    label,\n    errMsg,\n    disabled,\n    initialValue,\n    setTouched,\n    helperText,\n    serverError,\n    variant,\n    loading,\n    multiple,\n    // placeholder,\n  } = props;\n\n  const [state, setState] = useState({\n    value: initialValue,\n    touched: false,\n    valid: false,\n    errorMsg: \"\",\n  });\n  const { t } = useTranslation();\n  const inputLabel = useRef(null);\n  const [labelWidth, setLabelWidth] = useState(0);\n  useEffect(() => {\n    if (label) {\n      setLabelWidth(inputLabel.current.offsetWidth);\n    }\n  }, [label]);\n  useEffect(() => {\n    if (setTouched && state.value === \"\") {\n      setState({ ...state, touched: true });\n    }\n    // eslint-disable-next-line\n  }, [setTouched]);\n  const showServerErr = useCallback(() => {\n    setState({\n      ...state,\n      valid: false,\n      touched: true,\n      errorMsg: serverError,\n    });\n    // eslint-disable-next-line\n  }, [serverError]);\n  useEffect(() => {\n    if (serverError) {\n      showServerErr();\n    }\n  }, [serverError, showServerErr]);\n  const handleTouched = () => {\n    if (!state.touched) {\n      setState({ ...state, touched: true, errorMsg: required ? errMsg : \"\" });\n    }\n  };\n  const handleChange = (e) => {\n    // if (multiple) {\n    //   let options = e.target.options;\n    //   const results = [];\n\n    //   for (let i = 0, l = options.length; i < l; i++) {\n    //     if (options[i].selected) {\n    //       results.push(options[i].value);\n    //     }\n    //   }\n    //   let isValid = required ? !!results.length : true;\n    //   setState({ ...state, value: results, valid: isValid });\n    //   getResult(results, isValid, name);\n    // } else {\n    //   let val = e.target.value;\n    //   let isValid = required ? !!val : true;\n\n    //   setState({ ...state, value: val, valid: isValid });\n    //   getResult(val, isValid, name);\n    // }\n    let val = e.target.value;\n    let isValid = required ? !!val : true;\n    if (multiple) {\n      isValid = required ? !!val.length : true;\n      if (val) {\n        setState((prev) => {\n          const exist = prev.value.find((v) => v === +val);\n          const updated = exist\n            ? prev.value.filter((v) => v !== +val)\n            : prev.value.concat(+val);\n\n          return {\n            ...prev,\n            value: updated,\n            valid: isValid,\n          };\n        });\n      } else {\n        val = [];\n        setState({ ...state, value: val, valid: isValid });\n      }\n    } else {\n      setState({ ...state, value: val, valid: isValid });\n    }\n    getResult(val, isValid, name);\n  };\n\n  return (\n    <>\n      <FormControl\n        variant={variant || \"outlined\"}\n        fullWidth\n        error={\n          (required && state.touched && !state.valid && !initialValue) ||\n          (serverError && true)\n        }\n        // style={{ minWidth: 230 }}\n        disabled={disabled}\n      >\n        {label && (\n          <InputLabel ref={inputLabel} focused shrink>\n            {label}\n          </InputLabel>\n        )}\n        <Select\n          value={state.value}\n          onBlur={handleTouched}\n          onChange={handleChange}\n          labelWidth={labelWidth}\n          // IconComponent={loading ? SelectSpinner : ExpandMoreIcon}\n          multiple={multiple}\n          native\n        >\n          {loading ? (\n            <option>{t(\"common:loadingggg\")}</option>\n          ) : (\n            options.map((op) =>\n              op.subheader ? (\n                <ListSubheader\n                  value=\"\"\n                  key={op.value}\n                  className=\"bolder center\"\n                >\n                  {op.text}\n                </ListSubheader>\n              ) : (\n                op.value !== null && (\n                  <option value={op.value} key={op.value}>\n                    {op.text}\n                  </option>\n                )\n              )\n            )\n          )}\n        </Select>\n      </FormControl>\n      <FormHelperText style={{ color: \"#931621\" }}>\n        {state.touched && !state.valid && !initialValue && state.errorMsg}\n      </FormHelperText>\n      {serverError && initialValue && (\n        <FormHelperText style={{ color: \"#931621\" }}>\n          {serverError}\n        </FormHelperText>\n      )}\n      {helperText && <FormHelperText>{helperText}</FormHelperText>}\n    </>\n  );\n};\n\nexport default SelectNative;\n","import React, { Fragment, useState } from \"react\";\nimport Input from \"../Inputs/Input\";\nimport { useTranslation } from \"react-i18next\";\nimport { Grid, Box, IconButton, TextField } from \"@material-ui/core\";\nimport Globals from \"../../util/globals\";\nimport Tabs from \"../common/Tabs\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport ButtonSpinner from \"../../components/UI/Spinners/ButtonSpinner\";\nimport { attributesAutocomplete } from \"../../store/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { isError } from \"../../util/generals\";\n\nlet timeout;\n\nconst ProductAttributes = ({\n  getResult,\n  attributes,\n  touched,\n  removeAttribute,\n  prodState,\n  fetchAtts,\n}) => {\n  const lngs = Globals.settings.languages;\n  const [langTab, setLangTab] = useState(lngs[0].code);\n  const [loading, setLoading] = useState(false);\n  const [searched, setSearched] = useState(fetchAtts);\n  const dispatch = useDispatch();\n\n  const { t } = useTranslation();\n  const tabs = lngs.map((lng, i) => {\n    return {\n      id: lng.code,\n      label: lng.language,\n    };\n  });\n\n  const handleSuggestAttribute = async (query) => {\n    try {\n      if (!loading) {\n        setLoading(true);\n      }\n      let result;\n      clearTimeout(timeout);\n      timeout = setTimeout(async () => {\n        if (!query && searched.length <= 0) {\n          result = await dispatch(attributesAutocomplete());\n          setLoading(false);\n          return setSearched(result);\n        }\n        if (!query) {\n          return setLoading(false);\n        }\n        result = await dispatch(attributesAutocomplete(query));\n        setLoading(false);\n        setSearched(result);\n      }, 1000);\n    } catch (err) {\n      //\n    }\n  };\n\n  return (\n    <Fragment>\n      <Tabs\n        tabs={tabs}\n        value={langTab}\n        variant=\"standard\"\n        setTab={setLangTab}\n      />\n      {attributes.map((attribute, i) => (\n        <Grid\n          container\n          spacing={1}\n          key={attribute.order_id}\n          alignItems=\"center\"\n        >\n          <Grid item xs={11}>\n            <Grid container spacing={1} className=\"py\">\n              <Grid item sm={3} xs={6}>\n                <Autocomplete\n                  options={searched}\n                  getOptionLabel={(option) => option.title}\n                  value={attribute.attribute.value}\n                  selectOnFocus\n                  blurOnSelect\n                  openOnFocus\n                  closeText={t(\"common:delete\")}\n                  loading={loading}\n                  loadingText={t(\"common:loadingggg\")}\n                  onFocus={() => handleSuggestAttribute(null)}\n                  onChange={(e, value) => {\n                    getResult(\n                      value,\n                      !!value,\n                      \"attribute\",\n                      null,\n                      attribute.order_id\n                    );\n                  }}\n                  onKeyUp={(e) => {\n                    handleSuggestAttribute(e.target.value);\n                  }}\n                  noOptionsText={t(\"common:no_result\")}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label={t(\"products:search_attribute\") + \" **\"}\n                      variant=\"outlined\"\n                      error={\n                        (touched && !attribute.attribute.value) ||\n                        (isError(\n                          prodState.errors && prodState.errors.data,\n                          `attribute[${i}].attribute_id`\n                        ) &&\n                          true)\n                      }\n                      helperText={isError(\n                        prodState.errors && prodState.errors.data,\n                        `attribute[${i}].attribute_id`\n                      )}\n                      InputProps={{\n                        ...params.InputProps,\n                        endAdornment: (\n                          <>\n                            {params.InputProps.endAdornment}\n                            {loading && <ButtonSpinner />}\n                          </>\n                        ),\n                      }}\n                    />\n                  )}\n                />\n              </Grid>\n              <Grid item sm={9} xs={6}>\n                {attribute.description.map((desc) => (\n                  <Box key={desc.language} hidden={langTab !== desc.language}>\n                    <Input\n                      label={t(\"products:attribute_description\") + \" **\"}\n                      initialValue={desc.description.value}\n                      name=\"description\"\n                      getResult={(...args) =>\n                        getResult(...args, desc.language, attribute.order_id)\n                      }\n                      required\n                      min={2}\n                      setTouched={touched}\n                      serverError={isError(\n                        prodState.errors && prodState.errors.data,\n                        `attribute[${i}].description[${i}].description`\n                      )}\n                    />\n                  </Box>\n                ))}\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={1}>\n            <IconButton onClick={() => removeAttribute(attribute.order_id)}>\n              <DeleteRoundedIcon color=\"error\" />\n            </IconButton>\n          </Grid>\n        </Grid>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default ProductAttributes;\n","import React, { Fragment, useState } from \"react\";\nimport Input from \"../Inputs/Input\";\nimport { useTranslation } from \"react-i18next\";\nimport { Grid, Typography, Box } from \"@material-ui/core\";\nimport Globals from \"../../util/globals\";\nimport Tabs from \"../../components/common/Tabs\";\nimport { isError } from \"../../util/generals\";\n\nconst ProductInfo = ({ getResult, descriptions, touched, prodState }) => {\n  const lngs = Globals.settings.languages;\n  const [DescTab, setDescTab] = useState(lngs[0].code);\n  const { t } = useTranslation();\n\n  const tabs = lngs.map((lng, i) => {\n    return {\n      id: lng.code,\n      label: lng.language,\n    };\n  });\n\n  return (\n    <Fragment>\n      <Tabs\n        tabs={tabs}\n        value={DescTab}\n        variant=\"standard\"\n        setTab={setDescTab}\n        title={\n          <Typography align=\"left\" variant=\"h6\" className=\"p\">\n            {t(\"products:product_info\")}\n          </Typography>\n        }\n      />\n      {descriptions.map((desc, i) => (\n        <Box\n          key={desc.language}\n          className=\"p-1\"\n          hidden={DescTab !== desc.language}\n        >\n          <Typography\n            component=\"div\"\n            className=\"center p\"\n            variant=\"caption\"\n            color=\"textSecondary\"\n          >\n            {t(\"common:required_star\")}\n          </Typography>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Input\n                label={t(\"products:product_name\") + \" **\"}\n                initialValue={desc.title.value}\n                name=\"title\"\n                getResult={(...args) => getResult(...args, desc.language)}\n                required\n                min={2}\n                setTouched={touched}\n                serverError={isError(\n                  prodState.errors && prodState.errors.data,\n                  `description[${i}].title`\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Input\n                label={t(\"products:product_description\")}\n                initialValue={desc.description.value}\n                name=\"description\"\n                getResult={(...args) => getResult(...args, desc.language)}\n                multiline\n                rows={4}\n                serverError={isError(\n                  prodState.errors && prodState.errors.data,\n                  `description[${i}].description`\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Input\n                label={t(\"products:tags\")}\n                initialValue={desc.tags.value}\n                name=\"tags\"\n                getResult={(...args) => getResult(...args, desc.language)}\n                placeholder={t(\"products:separate_comma\")}\n                serverError={isError(\n                  prodState.errors && prodState.errors.data,\n                  `description[${i}].tags`\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Input\n                label={t(\"products:meta_title\")}\n                initialValue={desc.meta_title.value}\n                name=\"meta_title\"\n                getResult={(...args) => getResult(...args, desc.language)}\n                serverError={isError(\n                  prodState.errors && prodState.errors.data,\n                  `description[${i}].meta_title`\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Input\n                label={t(\"products:meta_description\")}\n                initialValue={desc.meta_description.value}\n                name=\"meta_description\"\n                getResult={(...args) => getResult(...args, desc.language)}\n                multiline\n                rows={4}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Input\n                label={t(\"products:meta_keywords\")}\n                initialValue={desc.meta_keywords.value}\n                name=\"meta_keywords\"\n                getResult={(...args) => getResult(...args, desc.language)}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default ProductInfo;\n","import React, { Fragment, useEffect, useCallback } from \"react\";\nimport Input from \"../Inputs/Input\";\nimport { useTranslation } from \"react-i18next\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport SelectInput from \"../Inputs/SelectInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { autocompleteTaxes } from \"../../store/actions\";\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport arLocale from \"date-fns/locale/ar-SA\";\nimport i18next from \"../../i18n\";\nimport { isError } from \"../../util/generals\";\n\nconst ProductDetail = ({\n  getResult,\n  quantity,\n  price,\n  points,\n  tax_id,\n  weight,\n  subtract,\n  minimum,\n  maximum,\n  available_at,\n  touched,\n  prodState,\n}) => {\n  const { t } = useTranslation();\n\n  const taxes = useSelector((state) => state.taxes);\n  const _taxes = taxes.taxes.map((t) => {\n    return { value: t.tax_id, text: t.title };\n  });\n  const dispatch = useDispatch();\n\n  const fetchTaxes = useCallback(() => {\n    dispatch(autocompleteTaxes());\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchTaxes();\n  }, [fetchTaxes]);\n\n  return (\n    <Fragment>\n      <Typography\n        component=\"div\"\n        className=\"center p\"\n        variant=\"caption\"\n        color=\"textSecondary\"\n      >\n        {t(\"common:required_star\")}\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item md={4} sm={6} xs={12}>\n          <Input\n            label={t(\"common:quantity\") + \" **\"}\n            initialValue={quantity}\n            name=\"quantity\"\n            getResult={getResult}\n            required\n            decimal\n            mathMin=\"0\"\n            setTouched={touched}\n          />\n        </Grid>\n        <Grid item md={4} sm={6} xs={12}>\n          <Input\n            label={t(\"common:price\") + \" **\"}\n            initialValue={price}\n            name=\"price\"\n            getResult={getResult}\n            required\n            decimal\n            mathMin=\"0\"\n            setTouched={touched}\n            serverError={isError(\n              prodState.errors && prodState.errors.data,\n              \"price\"\n            )}\n          />\n        </Grid>\n        <Grid item md={4} sm={6} xs={12}>\n          <SelectInput\n            options={[{ value: \"0\", text: t(\"products:no_tax\") }, ..._taxes]}\n            name=\"tax_id\"\n            label={t(\"products:tax\")}\n            getResult={getResult}\n            initialValue={tax_id}\n            loading={taxes.loading}\n            serverError={isError(\n              prodState.errors && prodState.errors.data,\n              \"tax_id\"\n            )}\n          />\n        </Grid>\n        <Grid item md={4} sm={6} xs={12}>\n          <SelectInput\n            options={[\n              { value: \"1\", text: t(\"common:yes\") },\n              { value: \"0\", text: t(\"common:no\") },\n            ]}\n            name=\"subtract\"\n            label={t(\"products:subtract\")}\n            getResult={getResult}\n            initialValue={subtract}\n          />\n        </Grid>\n        <Grid item md={4} sm={6} xs={12}>\n          <MuiPickersUtilsProvider\n            utils={DateFnsUtils}\n            locale={i18next.language === \"ar\" ? arLocale : \"\"}\n          >\n            <DateTimePicker\n              value={available_at}\n              label={t(\"common:available_at\")}\n              onChange={(e) => getResult(e, true, \"available_at\")}\n              style={{ width: \"100%\" }}\n              inputVariant=\"outlined\"\n              cancelLabel={t(\"common:cancel\")}\n              okLabel={t(\"common:confirm\")}\n              format=\"dd-MMMM-yyyy hh:mm:ss aaaa\"\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item md={4} sm={6} xs={12}>\n          <Input\n            label={t(\"common:points\")}\n            initialValue={points}\n            name=\"points\"\n            getResult={getResult}\n            decimal\n            mathMin=\"-1\"\n          />\n        </Grid>\n        <Grid item md={4} sm={6} xs={12}>\n          <Input\n            label={t(\"products:minimum\")}\n            initialValue={minimum + \"\"}\n            name=\"minimum\"\n            getResult={getResult}\n            decimal\n            mathMin=\"0\"\n          />\n        </Grid>\n        <Grid item md={4} sm={6} xs={12}>\n          <Input\n            label={t(\"products:maximum\")}\n            initialValue={maximum + \"\"}\n            name=\"maximum\"\n            getResult={getResult}\n            decimal\n            // mathMin={getMaximumLimit()}\n            helperNotice={t(\"products:maximum_helper\")}\n          />\n        </Grid>\n\n        <Grid item md={4} sm={6} xs={12}>\n          <Input\n            label={t(\"common:weight\")}\n            initialValue={weight}\n            name=\"weight\"\n            getResult={getResult}\n            decimal\n            mathMin=\"-1\"\n            helperNotice={t(\"products:weight_notice\")}\n          />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ProductDetail;\n","import React, { Fragment, useState } from \"react\";\nimport Input from \"../Inputs/Input\";\nimport { useTranslation } from \"react-i18next\";\nimport { Grid, Box, IconButton } from \"@material-ui/core\";\nimport Globals from \"../../util/globals\";\nimport Tabs from \"../common/Tabs\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport { isError } from \"../../util/generals\";\n\nconst ProductOptions = ({\n  getResult,\n  options,\n  touched,\n  removeOption,\n  prodState,\n}) => {\n  const lngs = Globals.settings.languages;\n  const [langTab, setLangTab] = useState(lngs[0].code);\n  const { t } = useTranslation();\n  const tabs = lngs.map((lng, i) => {\n    return {\n      id: lng.code,\n      label: lng.language,\n    };\n  });\n  return (\n    <Fragment>\n      <Tabs\n        tabs={tabs}\n        value={langTab}\n        variant=\"standard\"\n        setTab={setLangTab}\n      />\n      {options.map((option, i) => (\n        <Grid container spacing={1} key={option.order_id} alignItems=\"center\">\n          <Grid item xs={11}>\n            <Grid container spacing={1} className=\"py\">\n              <Grid item sm={4} xs={12}>\n                {option.description.map((desc) => (\n                  <Box key={desc.language} hidden={langTab !== desc.language}>\n                    <Input\n                      label={t(\"products:option_name\") + \" **\"}\n                      initialValue={desc.title.value}\n                      name=\"title\"\n                      getResult={(...args) =>\n                        getResult(...args, desc.language, option.order_id)\n                      }\n                      required\n                      min={2}\n                      setTouched={touched}\n                      serverError={isError(\n                        prodState.errors && prodState.errors.data,\n                        `options[${i}].description[${i}].title`\n                      )}\n                    />\n                  </Box>\n                ))}\n              </Grid>\n\n              <Grid item sm={4} xs={6}>\n                <Input\n                  label={t(\"common:quantity\") + \" **\"}\n                  initialValue={option.quantity.value}\n                  name=\"quantity\"\n                  getResult={(...args) =>\n                    getResult(...args, null, option.order_id)\n                  }\n                  required\n                  decimal\n                  mathMin=\"0\"\n                  setTouched={touched}\n                  serverError={isError(\n                    prodState.errors && prodState.errors.data,\n                    `options[${i}].quantity`\n                  )}\n                />\n              </Grid>\n              <Grid item sm={4} xs={6}>\n                <Input\n                  label={t(\"common:price\") + \" **\"}\n                  initialValue={option.price.value}\n                  name=\"price\"\n                  getResult={(...args) =>\n                    getResult(...args, null, option.order_id)\n                  }\n                  required\n                  decimal\n                  mathMin=\"0\"\n                  setTouched={touched}\n                  serverError={isError(\n                    prodState.errors && prodState.errors.data,\n                    `options[${i}].price`\n                  )}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={1}>\n            <IconButton onClick={() => removeOption(option.order_id)}>\n              <DeleteRoundedIcon color=\"error\" />\n            </IconButton>\n          </Grid>\n        </Grid>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default ProductOptions;\n","import React from \"react\";\nimport Input from \"../Inputs/Input\";\nimport { useTranslation } from \"react-i18next\";\nimport { Grid, IconButton } from \"@material-ui/core\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport { isError } from \"../../util/generals\";\n\nconst ProductWholesales = ({\n  getResult,\n  wholesales,\n  touched,\n  removeWholesale,\n  prodState,\n}) => {\n  const { t } = useTranslation();\n\n  return wholesales.map((ws, i) => (\n    <Grid container spacing={1} key={ws.order_id} alignItems=\"center\">\n      <Grid item xs={11}>\n        <Grid container spacing={1} className=\"py\">\n          <Grid item xs={6}>\n            <Input\n              label={t(\"common:quantity\") + \" **\"}\n              initialValue={ws.quantity.value}\n              name=\"quantity\"\n              getResult={(...args) => getResult(...args, ws.order_id)}\n              required\n              decimal\n              mathMin=\"0\"\n              setTouched={touched}\n              serverError={isError(\n                prodState.errors && prodState.errors.data,\n                `wholesales[${i}].quantity`\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Input\n              label={t(\"common:price\") + \" **\"}\n              initialValue={ws.price.value}\n              name=\"price\"\n              getResult={(...args) => getResult(...args, ws.order_id)}\n              required\n              decimal\n              mathMin=\"0\"\n              setTouched={touched}\n              serverError={isError(\n                prodState.errors && prodState.errors.data,\n                `wholesales[${i}].price`\n              )}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={1}>\n        <IconButton onClick={() => removeWholesale(ws.order_id)}>\n          <DeleteRoundedIcon color=\"error\" />\n        </IconButton>\n      </Grid>\n    </Grid>\n  ));\n};\n\nexport default ProductWholesales;\n","import React, { Fragment, useEffect, useCallback, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Grid, LinearProgress, Box } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  categoriesAutocomplete,\n  filtersAutocomplete,\n} from \"../../store/actions\";\nimport SelectNative from \"../Inputs/SelectNative\";\nimport Input from \"../Inputs/Input\";\n\nconst ProductCatFilter = ({ getResult, categories, filters }) => {\n  const { t } = useTranslation();\n  const [cats, setCats] = useState([]);\n  const [fils, setFils] = useState([]);\n  const filState = useSelector((state) => state.filters);\n  const catState = useSelector((state) => state.categories);\n  const dispatch = useDispatch();\n\n  const fetchCats = useCallback(\n    async (q) => {\n      try {\n        const _cats = await dispatch(categoriesAutocomplete(q));\n        setCats(_cats);\n      } catch (err) {\n        //\n      }\n    },\n    [dispatch]\n  );\n  const fetchFils = useCallback(\n    async (q) => {\n      try {\n        const _filters = await dispatch(filtersAutocomplete(q));\n        setFils(_filters);\n      } catch (err) {\n        //\n      }\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    fetchCats();\n    fetchFils();\n  }, [fetchCats, fetchFils]);\n\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item sm={6} xs={12}>\n          <Box className=\"py\">\n            <Input\n              getResult={fetchCats}\n              label={t(\"products:search_categories\")}\n            />\n            {catState.loading && <Loader />}\n          </Box>\n          <SelectNative\n            options={cats.map((c) => {\n              return { value: c.category_id, text: c.title };\n            })}\n            name=\"category\"\n            label={t(\"common:categories\")}\n            getResult={getResult}\n            initialValue={categories}\n            multiple\n          />\n        </Grid>\n        <Grid item sm={6} xs={12}>\n          <Box className=\"py\">\n            <Input getResult={fetchFils} label={t(\"products:search_filters\")} />\n            {filState.loading && <Loader />}\n          </Box>\n          <SelectNative\n            options={fils.map((f) => {\n              return { value: f.filter_id, text: f.title };\n            })}\n            name=\"filter\"\n            label={t(\"common:filters\")}\n            getResult={getResult}\n            initialValue={filters}\n            multiple\n          />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst Loader = () => {\n  return (\n    <LinearProgress\n      style={{ borderRadius: 5, marginLeft: 1, marginRight: 1 }}\n    />\n  );\n};\n\nexport default ProductCatFilter;\n","import React, { useState, useEffect, useCallback, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { Typography, Button, Paper, Box, Grid } from \"@material-ui/core\";\nimport ProductInfo from \"../../components/Products/ProductInfo\";\nimport Globals from \"../../util/globals\";\nimport ProductDetail from \"../../components/Products/ProductDetail\";\nimport IosSwitch from \"../../components/Inputs/IosSwitch\";\nimport * as actions from \"../../store/actions\";\nimport ProductOptions from \"../../components/Products/ProductOptions\";\nimport ProductWholesales from \"../../components/Products/ProductWholesales\";\nimport ProductAttributes from \"../../components/Products/ProductAttributes\";\nimport ProductCatFilter from \"../../components/Products/ProductCatFilter\";\nimport DropZone from \"../../components/common/DropZone\";\nimport ButtonSpinner from \"../../components/UI/Spinners/ButtonSpinner\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport TableSkeleton from \"../../components/common/TableSkeleton\";\n// import PageError from \"../../components/common/PageError\";\n\nconst descriptionState = () =>\n  Globals.settings.languages.map((lng) => {\n    return {\n      language: lng.code,\n      title: {\n        value: \"\",\n        validity: false,\n      },\n      description: {\n        value: \"\",\n        validity: true,\n      },\n      tags: {\n        value: \"\",\n        validity: true,\n      },\n      meta_title: {\n        value: \"\",\n        validity: true,\n      },\n      meta_description: {\n        value: \"\",\n        validity: true,\n      },\n      meta_keywords: {\n        value: \"\",\n        validity: true,\n      },\n    };\n  });\n\nconst optionsState = () => {\n  return {\n    option_id: {\n      value: \"\",\n      validity: true,\n    },\n    quantity: {\n      value: 0,\n      validity: false,\n    },\n    price: {\n      value: 0,\n      validity: false,\n    },\n    description: Globals.settings.languages.map((lng) => {\n      return {\n        language: lng.code,\n        title: {\n          value: \"\",\n          validity: false,\n        },\n      };\n    }),\n  };\n};\n\nconst wholesalesState = () => {\n  return {\n    quantity: {\n      value: 0,\n      validity: false,\n    },\n    price: {\n      value: 0,\n      validity: false,\n    },\n  };\n};\n\nconst attributeState = () => {\n  return {\n    attribute: {\n      value: null,\n      validity: false,\n    },\n    description: Globals.settings.languages.map((lng) => {\n      return {\n        language: lng.code,\n        description: {\n          value: \"\",\n          validity: false,\n        },\n      };\n    }),\n  };\n};\n\nconst initialState = () => {\n  return {\n    description: descriptionState(),\n    quantity: {\n      value: 1,\n      validity: true,\n    },\n    price: {\n      value: 0,\n      validity: false,\n    },\n    points: {\n      value: \"0\",\n      validity: true,\n    },\n    tax_id: {\n      value: \"0\",\n      validity: true,\n    },\n    weight: {\n      value: \"0\",\n      validity: true,\n    },\n    subtract: {\n      value: \"1\",\n      validity: true,\n    },\n    minimum: {\n      value: 1,\n      validity: true,\n    },\n    maximum: {\n      value: 0,\n      validity: true,\n    },\n    available_at: {\n      value: new Date(),\n      validity: true,\n    },\n    status: {\n      value: 1,\n      validity: true,\n    },\n    image: {\n      value: [],\n      validity: false,\n    },\n    category: [],\n    filter: [],\n    options: [],\n    attribute: [],\n    wholesales: [],\n  };\n};\n\nlet fetchAtts = [];\nconst setEditState = (product) => {\n  return {\n    description: descriptionState().map((ds) => {\n      const existed = product.description.find(\n        (pd) => pd.language === ds.language\n      );\n      if (existed) {\n        return {\n          language: ds.language,\n          title: {\n            value: existed.title,\n            validity: !!existed.title,\n          },\n          description: {\n            value: existed.description,\n            validity: true,\n          },\n          tags: {\n            value: existed.tags,\n            validity: true,\n          },\n          meta_title: {\n            value: existed.meta_title,\n            validity: true,\n          },\n          meta_description: {\n            value: existed.meta_description,\n            validity: true,\n          },\n          meta_keywords: {\n            value: existed.meta_keywords,\n            validity: true,\n          },\n        };\n      } else {\n        return ds;\n      }\n    }),\n    quantity: {\n      value: product.quantity,\n      validity: product.quantity > 0,\n    },\n    price: {\n      value: product.price,\n      validity: +product.price > 0,\n    },\n    points: {\n      value: product.points + \"\",\n      validity: true,\n    },\n    tax_id: {\n      value: product.tax_id,\n      validity: true,\n    },\n    weight: {\n      value: product.weight,\n      validity: true,\n    },\n    subtract: {\n      value: product.subtract + \"\",\n      validity: true,\n    },\n    minimum: {\n      value: product.minimum,\n      validity: true,\n    },\n    maximum: {\n      value: product.maximum || 0,\n      validity: true,\n    },\n    available_at: {\n      value: new Date(product.available_at),\n      validity: true,\n    },\n    status: {\n      value: product.status,\n      validity: true,\n    },\n    image: {\n      value: product.image.map((img, i) => {\n        return {\n          id: `prev_${i}`,\n          name: img,\n          preview: `${Globals.server}/${img}`,\n        };\n      }),\n      validity: !!product.image.length,\n    },\n    category: product.categories.map((pc) => pc.id),\n    filter: product.filters.map((pf) => pf.id),\n    options: product.options.map((po, i) => {\n      return {\n        order_id: i,\n        option_id: {\n          value: po.option_id,\n          validity: !!po.option_id,\n        },\n        quantity: {\n          value: po.quantity,\n          validity: po.quantity > 0,\n        },\n        price: {\n          value: po.price,\n          validity: !!po.price,\n        },\n        description: optionsState().description.map((od) => {\n          const existed = po.description.find(\n            (p) => p.language === od.language\n          );\n          if (existed) {\n            return {\n              language: od.language,\n              title: {\n                value: existed.title,\n                validity: existed.title.length > 3,\n              },\n            };\n          } else {\n            return od;\n          }\n        }),\n      };\n    }),\n    attribute: product.attributes.map((pa, i) => {\n      return {\n        order_id: i,\n        attribute: {\n          value: pa.attribute,\n          validity: !!pa.attribute,\n        },\n        description: attributeState().description.map((ad) => {\n          const existed = pa.description.find(\n            (p) => p.language === ad.language\n          );\n          if (existed) {\n            return {\n              language: ad.language,\n              description: {\n                value: existed.description,\n                validity: existed.description.length > 3,\n              },\n            };\n          } else {\n            return ad;\n          }\n        }),\n      };\n    }),\n    wholesales: product.wholesales.map((pw, i) => {\n      return {\n        order_id: i,\n        quantity: {\n          value: pw.quantity,\n          validity: pw.quantity > 0,\n        },\n        price: {\n          value: pw.price,\n          validity: pw.price > 0,\n        },\n      };\n    }),\n  };\n};\n\nconst AddEdit = ({ history, match }) => {\n  const isEdit = match.params.id;\n  const [editLoading, setEditLoading] = useState(!!isEdit);\n  const [state, setState] = useState(initialState());\n  const [touched, setTouched] = useState(false);\n  const prodState = useSelector((state) => state.products);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const fetchProduct = useCallback(async () => {\n    try {\n      const fetchedProd = await dispatch(actions.getProduct(isEdit));\n      setState(setEditState(fetchedProd));\n      //Pass atts to Attribute component to prevent Autocomplete warning (no options available)\n      fetchAtts = fetchedProd.attributes.map((a) => a.attribute);\n    } catch (err) {\n      let msg = err.message || t(\"products:prod_not_found\");\n      dispatch(actions.fireSnake(\"error\", msg));\n    } finally {\n      setEditLoading(false);\n    }\n    // eslint-disable-next-line\n  }, [isEdit, dispatch]);\n\n  useEffect(() => {\n    if (isEdit) {\n      fetchProduct();\n    }\n    // eslint-disable-next-line\n  }, [isEdit]);\n\n  const handleProducInfoState = (value, validity, name, lng) => {\n    setState((prev) => {\n      return {\n        ...prev,\n        description: prev.description.map((d) =>\n          d.language === lng\n            ? { ...d, [name]: { value: value, validity: validity } }\n            : d\n        ),\n      };\n    });\n  };\n  const handleProductDetailState = (value, validity, name) => {\n    setState((prev) => {\n      return {\n        ...prev,\n        [name]: { value: value, validity: validity },\n      };\n    });\n  };\n  const handleCatFilterState = (value, validity, name) => {\n    setState((prev) => {\n      let updated = [];\n      if (value.length) {\n        const exist = prev[name].find((v) => v === +value);\n        updated = exist\n          ? prev[name].filter((v) => v !== +value)\n          : prev[name].concat(+value);\n      }\n      return {\n        ...prev,\n        [name]: updated,\n      };\n    });\n  };\n  const handleProductOptionState = (value, validity, name, lng, order_id) => {\n    setState((prev) => {\n      const updated = prev.options.map((op) => {\n        if (op.order_id === order_id) {\n          if (lng) {\n            return {\n              ...op,\n              description: op.description.map((d) =>\n                d.language === lng\n                  ? { ...d, [name]: { value: value, validity: validity } }\n                  : d\n              ),\n            };\n          } else {\n            return {\n              ...op,\n              [name]: { value: value, validity: validity },\n            };\n          }\n        }\n        return op;\n      });\n\n      return {\n        ...prev,\n        options: updated,\n      };\n    });\n  };\n  const handleProductWholesaleState = (value, validity, name, order_id) => {\n    setState((prev) => {\n      const updated = prev.wholesales.map((op) => {\n        if (op.order_id === order_id) {\n          return {\n            ...op,\n            [name]: { value: value, validity: validity },\n          };\n        }\n        return op;\n      });\n\n      return {\n        ...prev,\n        wholesales: updated,\n      };\n    });\n  };\n  const handleProductAttributeState = (\n    value,\n    validity,\n    name,\n    lng,\n    order_id\n  ) => {\n    setState((prev) => {\n      const updated = prev.attribute.map((att) => {\n        if (att.order_id === order_id) {\n          if (lng) {\n            return {\n              ...att,\n              description: att.description.map((d) =>\n                d.language === lng\n                  ? { ...d, [name]: { value: value, validity: validity } }\n                  : d\n              ),\n            };\n          } else {\n            return {\n              ...att,\n              [name]: { value: value, validity: validity },\n            };\n          }\n        }\n        return att;\n      });\n\n      return {\n        ...prev,\n        attribute: updated,\n      };\n    });\n  };\n  const handleSubmit = async () => {\n    let body = {};\n    // validate non-nested state\n    for (const key in state) {\n      if (\n        key !== \"description\" &&\n        key !== \"options\" &&\n        key !== \"wholesales\" &&\n        key !== \"attribute\" &&\n        key !== \"category\" &&\n        key !== \"filter\"\n      ) {\n        body = { ...body, [key]: state[key].value };\n        if (!state[key].validity) {\n          setTouched(true);\n          return dispatch(\n            actions.fireSnake(\"error\", t(\"common:complete_red_input\"))\n          );\n        }\n      }\n    }\n\n    //validate description\n    let description = [];\n    for (const desc of state.description) {\n      description.push({\n        language: desc[\"language\"],\n        title: desc[\"title\"].value,\n        description: desc[\"description\"].value,\n        tags: desc[\"tags\"].value,\n        meta_title: desc[\"meta_title\"].value,\n        meta_description: desc[\"meta_description\"].value,\n        meta_keywords: desc[\"meta_keywords\"].value,\n      });\n      for (const key in desc) {\n        if (key !== \"language\" && !desc[key].validity) {\n          setTouched(true);\n          return dispatch(\n            actions.fireSnake(\n              \"error\",\n              t(\"common:complete_red_input_detail\", {\n                section: t(\"products:product_info\"),\n                language: Globals.settings.languages.find(\n                  (l) => l.code === desc.language\n                ).language,\n              })\n            )\n          );\n        }\n      }\n    }\n\n    //validate options\n    let options = [];\n    if (state.options.length) {\n      for (const opt of state.options) {\n        const OptionDesc = [];\n        for (const desc of opt.description) {\n          if (!desc.title.validity) {\n            setTouched(true);\n            return dispatch(\n              actions.fireSnake(\n                \"error\",\n                t(\"common:complete_red_input_detail\", {\n                  section: t(\"products:product_options\"),\n                  language: Globals.settings.languages.find(\n                    (l) => l.code === desc.language\n                  ).language,\n                })\n              )\n            );\n          }\n          OptionDesc.push({\n            language: desc.language,\n            title: desc.title.value,\n          });\n        }\n\n        options.push({\n          option_id: opt.option_id.value,\n          quantity: opt.quantity.value,\n          price: opt.price.value,\n          description: OptionDesc,\n        });\n\n        for (const key in opt) {\n          if (\n            key !== \"description\" &&\n            key !== \"order_id\" &&\n            !opt[key].validity\n          ) {\n            setTouched(true);\n            return dispatch(\n              actions.fireSnake(\n                \"error\",\n                t(\"common:complete_red_input_detail_nolang\", {\n                  section: t(\"products:product_options\"),\n                })\n              )\n            );\n          }\n        }\n      }\n    }\n\n    //Validate wholesales\n    let wholesales = [];\n    if (state.wholesales.length) {\n      for (const ws of state.wholesales) {\n        if (!ws.quantity.validity || !ws.price.validity) {\n          setTouched(true);\n          return dispatch(\n            actions.fireSnake(\n              \"error\",\n              t(\"common:complete_red_input_detail_nolang\", {\n                section: t(\"products:product_wholesales\"),\n              })\n            )\n          );\n        }\n        wholesales.push({\n          quantity: ws.quantity.value,\n          price: ws.price.value,\n        });\n      }\n    }\n\n    //validate attribute\n    let attribute = [];\n    if (state.attribute.length) {\n      for (const att of state.attribute) {\n        const attDesc = [];\n        for (const desc of att.description) {\n          if (!desc.description.validity) {\n            setTouched(true);\n            return dispatch(\n              actions.fireSnake(\n                \"error\",\n                t(\"common:complete_red_input_detail\", {\n                  section: t(\"products:product_attributes\"),\n                  language: Globals.settings.languages.find(\n                    (l) => l.code === desc.language\n                  ).language,\n                })\n              )\n            );\n          }\n          attDesc.push({\n            language: desc.language,\n            description: desc.description.value,\n          });\n        }\n\n        for (const key in att) {\n          if (\n            key !== \"description\" &&\n            key !== \"order_id\" &&\n            !att[key].validity\n          ) {\n            setTouched(true);\n            return dispatch(\n              actions.fireSnake(\n                \"error\",\n                t(\"common:complete_red_input_detail_nolang\", {\n                  section: t(\"products:product_attributes\"),\n                })\n              )\n            );\n          }\n        }\n        attribute.push({\n          attribute_id: att.attribute.value\n            ? att.attribute.value.attribute_id\n            : \"\",\n          description: attDesc,\n        });\n      }\n    }\n\n    body = {\n      ...body,\n      description: JSON.stringify(description),\n      options: JSON.stringify(options),\n      attribute: JSON.stringify(attribute),\n      category: JSON.stringify(state.category),\n      filter: JSON.stringify(state.filter),\n      wholesales: JSON.stringify(wholesales),\n    };\n\n    try {\n      await dispatch(actions.addEditProduct(body, isEdit));\n      history.replace(\"/products\");\n    } catch (err) {\n      let msg = err.message || t(\"products:add_prod_err\");\n      dispatch(actions.fireSnake(\"error\", msg));\n    }\n  };\n\n  const handleAddNewOption = () => {\n    const last = state.options[state.options.length - 1];\n    const order_id = last ? last.order_id + 1 : 0;\n    setState((prev) => {\n      return {\n        ...prev,\n        options: [...prev.options, { order_id, ...optionsState() }],\n      };\n    });\n  };\n  const handleRemoveOption = (order_id) => {\n    setState((prev) => {\n      return {\n        ...prev,\n        options: prev.options.filter((op) => op.order_id !== order_id),\n      };\n    });\n  };\n  const handleAddNewWholesale = () => {\n    const last = state.wholesales[state.wholesales.length - 1];\n    const order_id = last ? last.order_id + 1 : 0;\n    setState((prev) => {\n      return {\n        ...prev,\n        wholesales: [...prev.wholesales, { order_id, ...wholesalesState() }],\n      };\n    });\n  };\n  const handleRemoveWholesale = (order_id) => {\n    setState((prev) => {\n      return {\n        ...prev,\n        wholesales: prev.wholesales.filter((ws) => ws.order_id !== order_id),\n      };\n    });\n  };\n  const handleAddNewAttribute = () => {\n    const last = state.attribute[state.attribute.length - 1];\n    const order_id = last ? last.order_id + 1 : 0;\n    setState((prev) => {\n      return {\n        ...prev,\n        attribute: [...prev.attribute, { order_id, ...attributeState() }],\n      };\n    });\n  };\n  const handleRemoveAttribute = (order_id) => {\n    setState((prev) => {\n      return {\n        ...prev,\n        attribute: prev.attribute.filter((att) => att.order_id !== order_id),\n      };\n    });\n  };\n  return (\n    <Fragment>\n      <Typography align=\"center\" variant=\"h4\" className=\"py-1\">\n        {isEdit ? t(\"products:edit_product\") : t(\"products:add_product\")}\n      </Typography>\n      {editLoading ? (\n        <TableSkeleton row={6} col={2} />\n      ) : (\n        // : !editLoading && prodState.errors ? (\n        //   <PageError text={prodState.errors.message} onTryAgain={fetchProduct} />\n        // )\n        <Fragment>\n          <Grid container spacing={1}>\n            {/* Product Info Section */}\n            <Grid item md={6} sm={12} xs={12}>\n              <Paper className=\"my-1\">\n                <ProductInfo\n                  descriptions={state.description}\n                  getResult={handleProducInfoState}\n                  touched={touched}\n                  prodState={prodState}\n                />\n              </Paper>\n            </Grid>\n\n            {/* Product Details Section */}\n            <Grid item md={6} sm={12} xs={12}>\n              <Paper className=\"my-1 p-1\">\n                <Box className=\"flex flex-justify-between align-items-center\">\n                  <Typography align=\"center\" variant=\"h6\" className=\"p\">\n                    {t(\"products:product_detail\")}\n                  </Typography>\n                  <IosSwitch\n                    state={state.status.value}\n                    onChange={handleProductDetailState}\n                    name=\"status\"\n                  />\n                </Box>\n                <ProductDetail\n                  quantity={state.quantity.value}\n                  price={state.price.value}\n                  points={state.points.value}\n                  tax_id={state.tax_id.value}\n                  weight={state.weight.value}\n                  subtract={state.subtract.value}\n                  minimum={state.minimum.value}\n                  maximum={state.maximum.value}\n                  available_at={state.available_at.value}\n                  touched={touched}\n                  getResult={handleProductDetailState}\n                  prodState={prodState}\n                />\n              </Paper>\n\n              {/* Product Cat/Filter Section */}\n              <Paper className=\"my-1 p-1 center\">\n                <Typography align=\"left\" variant=\"h6\" className=\"p\">\n                  {t(\"products:product_cat_fil\")}\n                </Typography>\n                <ProductCatFilter\n                  categories={state.category}\n                  filters={state.filter}\n                  getResult={handleCatFilterState}\n                  prodState={prodState}\n                />\n              </Paper>\n            </Grid>\n\n            {/* Product image Section */}\n            <Grid item xs={12}>\n              <Paper className=\"my-1 p-1 center\">\n                <Typography align=\"left\" variant=\"h6\" className=\"p\">\n                  {t(\"products:product_images\")}\n                </Typography>\n                <DropZone\n                  title={t(\"products:product_images_info\")}\n                  getResult={handleProductDetailState}\n                  required\n                  touched={touched}\n                  initialImgs={state.image.value}\n                />\n              </Paper>\n            </Grid>\n\n            {/* Product Attribute Section */}\n            <Grid item xs={12}>\n              <Paper className=\"my-1 p-1 center\">\n                <Typography align=\"left\" variant=\"h6\" className=\"p\">\n                  {t(\"products:product_attributes\")}\n                </Typography>\n                {!state.attribute.length ? (\n                  <Typography variant=\"body1\" className=\"p-1\">\n                    {t(\"products:no_attributes\")}\n                  </Typography>\n                ) : (\n                  <ProductAttributes\n                    attributes={state.attribute}\n                    touched={touched}\n                    getResult={handleProductAttributeState}\n                    removeAttribute={handleRemoveAttribute}\n                    prodState={prodState}\n                    fetchAtts={fetchAtts}\n                  />\n                )}\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={handleAddNewAttribute}\n                >\n                  {t(\"products:add_new_attribute\")}\n                </Button>\n              </Paper>\n            </Grid>\n\n            {/* Product Options Section */}\n            <Grid item md={6} sm={12} xs={12}>\n              <Paper className=\"my-1 p-1 center\">\n                <Typography align=\"left\" variant=\"h6\" className=\"p\">\n                  {t(\"products:product_options\")}\n                </Typography>\n                {!state.options.length ? (\n                  <Typography variant=\"body1\" className=\"p-1\">\n                    {t(\"products:no_options\")}\n                  </Typography>\n                ) : (\n                  <ProductOptions\n                    options={state.options}\n                    touched={touched}\n                    getResult={handleProductOptionState}\n                    removeOption={handleRemoveOption}\n                    prodState={prodState}\n                  />\n                )}\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={handleAddNewOption}\n                >\n                  {t(\"products:add_new_option\")}\n                </Button>\n              </Paper>\n            </Grid>\n\n            {/* Product Whoelsale Section */}\n            <Grid item md={6} sm={12} xs={12}>\n              <Paper className=\"my-1 p-1 center\">\n                <Typography align=\"left\" variant=\"h6\" className=\"p\">\n                  {t(\"products:product_wholesales\")}\n                </Typography>\n                {!state.wholesales.length ? (\n                  <Typography variant=\"body1\" className=\"p-1\">\n                    {t(\"products:no_wholesales\")}\n                  </Typography>\n                ) : (\n                  <ProductWholesales\n                    wholesales={state.wholesales}\n                    touched={touched}\n                    getResult={handleProductWholesaleState}\n                    removeWholesale={handleRemoveWholesale}\n                    prodState={prodState}\n                  />\n                )}\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={handleAddNewWholesale}\n                >\n                  {t(\"products:add_new_wholesale\")}\n                </Button>\n              </Paper>\n            </Grid>\n          </Grid>\n\n          {/* Submit */}\n          <Box className=\"center py-1\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={handleSubmit}\n              endIcon={prodState.loading && <ButtonSpinner />}\n              startIcon={isEdit ? <EditRoundedIcon /> : <AddRoundedIcon />}\n              disabled={prodState.loading}\n              style={{ width: \"80%\" }}\n            >\n              <Typography variant=\"h4\" className=\"py-1\">\n                {isEdit\n                  ? t(\"products:edit_product\")\n                  : t(\"products:add_product\")}\n              </Typography>\n            </Button>\n          </Box>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default AddEdit;\n"],"sourceRoot":""}