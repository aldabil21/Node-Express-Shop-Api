{"version":3,"sources":["components/common/IconTextNotice.js","util/tableIcons.js","components/common/CountDown.js","components/Products/ProductSpecials.js","views/Products/View.js"],"names":["IconTextNotice","Icon","text","color","onTryAgain","t","useTranslation","padding","className","style","fontSize","opacity","variant","onClick","endIcon","tableIcons","Add","forwardRef","props","ref","Edit","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","Delete","Check","Clear","Filter","Export","useStyles","makeStyles","theme","square","palette","secondary","contrastText","margin","CountDown","date","Date","useState","counter","setCounter","expired","setExpired","gradient_secondary","useContext","themeContext","interval","useRef","countTime","useCallback","endDate","isAfter","now","duration","intervalToDuration","start","end","key","checkIfExpired","clearInterval","current","splitted","formatDuration","format","zero","delimiter","split","i18n","dir","language","reverse","useEffect","_intTimer","length","setInterval","classes","locale","arSA","container","map","c","i","section","item","lg","md","sm","xs","sec","ii","charAt","toUpperCase","timeout","tableHeaders","title","field","type","Ttext","ns","render","row","deadline","initialEditValue","lookup","0","1","created_at","editable","updated_at","ProductSpecials","product_id","dispatch","useDispatch","mounted","setMounted","specials","useSelector","state","tableRef","specialsRef","hash","useLocation","fetchSpecials","a","actions","scrollIntoView","behavior","block","inline","setTimeout","clearTimeout","Paper","TableSkeleton","loading","errors","ErrorOutlineIcon","message","handleRowError","err","msg","data","icons","columns","Typography","onRowAdd","newData","onRowUpdate","oldData","onRowDelete","options","detailPanelColumnAlignment","actionsColumnIndex","draggable","emptyRowsWhenPaging","search","debounceInterval","sorting","localization","header","body","editTooltip","deleteTooltip","addTooltip","editRow","cancelTooltip","saveTooltip","deleteText","align","emptyDataSourceMessage","LocalOfferRoundedIcon","dateTimePickerLocalization","pagination","labelDisplayedRows","labelRowsSelect","isLoading","itemLoading","View","id","match","params","product","setProduct","products","fetchProduct","getProduct","fetchedProd","fireSnake","Grid","spacing","showIndicators","showStatus","infiniteLoop","swipeable","emulateTouch","thumbWidth","image","img","alt","description","src","Globals","server","pd","component","details","push","value","startsWith","getDetails","categories","cat","Chip","size","label","icon","status","Divider","filters","filt","attributes","att","attribute","attribute_id","ad","opt","option_id","od","quantity","price","wholesales","pw"],"mappings":"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","file":"static/js/32.f561d116.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\n\nconst IconTextNotice = ({ Icon, text, color, onTryAgain }) => {\n  const { t } = useTranslation();\n  return (\n    <Box padding={5} className=\"center\">\n      <Icon\n        color={color || \"primary\"}\n        style={{ fontSize: 200, opacity: 0.1 }}\n      />\n      <Typography variant=\"body2\">{text}</Typography>\n      {onTryAgain && (\n        <Box className=\"m\">\n          <Button\n            onClick={onTryAgain}\n            color=\"primary\"\n            variant=\"outlined\"\n            endIcon={<CachedIcon />}\n          >\n            {t(\"common:tryagain\")}\n          </Button>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default IconTextNotice;\n","import React, { forwardRef } from \"react\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport HeightIcon from \"@material-ui/icons/Height\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport CheckOutlinedIcon from \"@material-ui/icons/CheckOutlined\";\nimport FilterListOutlinedIcon from \"@material-ui/icons/FilterListOutlined\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nexport const tableIcons = {\n  Add: forwardRef((props, ref) => (\n    <AddBoxIcon {...props} ref={ref} color=\"primary\" fontSize=\"large\" />\n  )),\n  Edit: forwardRef((props, ref) => <EditIcon {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPageIcon {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPageIcon {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => (\n    <NavigateNextIcon {...props} ref={ref} />\n  )),\n  PreviousPage: forwardRef((props, ref) => (\n    <NavigateBeforeIcon {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <ClearIcon {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <SearchIcon {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <HeightIcon {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => (\n    <DeleteOutlineOutlinedIcon {...props} ref={ref} color=\"error\" />\n  )),\n  Check: forwardRef((props, ref) => (\n    <CheckOutlinedIcon {...props} ref={ref} color=\"primary\" />\n  )),\n  Clear: forwardRef((props, ref) => (\n    <ClearIcon {...props} ref={ref} color=\"error\" />\n  )),\n  Filter: forwardRef((props, ref) => (\n    <FilterListOutlinedIcon {...props} ref={ref} />\n  )),\n  Export: forwardRef((props, ref) => (\n    <CloudDownloadIcon {...props} ref={ref} color=\"primary\" fontSize=\"large\" />\n  )),\n};\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useContext,\n  useRef,\n} from \"react\";\nimport { intervalToDuration, formatDuration, format, isAfter } from \"date-fns\";\nimport { Typography, Grid, makeStyles, Box } from \"@material-ui/core\";\nimport themeContext from \"../../theme/themeContext\";\nimport i18n from \"../../i18n\";\nimport { arSA } from \"date-fns/locale\";\n\nconst checkIfExpired = (duration) => {\n  let expired = true;\n  for (const key in duration) {\n    if (duration[key] > 0) {\n      expired = false;\n      break;\n    }\n  }\n  return expired;\n};\n\nconst CountDown = ({ date = new Date() }) => {\n  // let interval;\n  const [counter, setCounter] = useState([]);\n  const [expired, setExpired] = useState(false);\n  const { gradient_secondary } = useContext(themeContext);\n  const interval = useRef();\n\n  const countTime = useCallback(() => {\n    const endDate = isAfter(date, Date.now()) ? date : Date.now();\n\n    const duration = intervalToDuration({\n      start: new Date(),\n      end: endDate,\n    });\n\n    //Clear interval when done - Use when durationFormatter zero:true\n    const isExpired = checkIfExpired(duration);\n    if (isExpired) {\n      setExpired(true);\n      return clearInterval(interval.current);\n    }\n\n    const durationFormatted = formatDuration(duration, {\n      format: [\"days\", \"hours\", \"minutes\", \"seconds\"],\n      zero: true,\n      delimiter: \";\",\n    });\n\n    // //Clear interval when done - Use when durationFormatter zero:false\n    // if (!durationFormatted) {\n    //   setExpired(true);\n    //   return clearInterval(interval.current);\n    // }\n\n    let splitted = durationFormatted.split(\";\");\n    if (i18n.dir(i18n.language) === \"rtl\") {\n      splitted.reverse();\n    }\n    setCounter(splitted);\n  }, [date, interval]);\n\n  useEffect(() => {\n    let _intTimer = counter.length ? 1000 : 0;\n    if (!expired) {\n      interval.current = setInterval(() => {\n        countTime();\n      }, _intTimer);\n    }\n\n    return () => clearInterval(interval.current);\n  }, [counter, countTime, expired]);\n\n  const classes = useStyles();\n  return expired ? (\n    <Typography variant=\"body2\">\n      {format(date, \"yyyy MMMM dd - hh:mm:ss aaaa\", {\n        locale: i18n.language === \"ar\" ? arSA : \"\",\n      })}\n    </Typography>\n  ) : (\n    <Grid container>\n      {counter.map((c, i) => {\n        const section = c.split(\" \");\n\n        return (\n          <Grid item lg={3} md={6} sm={6} xs={6} key={i}>\n            <Box className={`center ${gradient_secondary} ${classes.square}`}>\n              {section.map((sec, ii) =>\n                ii > 0 ? (\n                  <Typography key={ii}>\n                    {sec.charAt(0).toUpperCase()}\n                  </Typography>\n                ) : (\n                  <Typography key={ii}>{sec}</Typography>\n                )\n              )}\n            </Box>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  square: {\n    color: theme.palette.secondary.contrastText,\n    margin: 1,\n    padding: 2,\n  },\n}));\n\nexport default CountDown;\n","import React, { useRef, useEffect, useCallback, useState } from \"react\";\nimport Ttext from \"../common/Ttext\";\nimport { format } from \"date-fns\";\nimport { arSA } from \"date-fns/locale\";\nimport i18n from \"../../i18n\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { tableIcons } from \"../../util/tableIcons\";\nimport IconTextNotice from \"../common/IconTextNotice\";\nimport MaterialTable from \"material-table\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\nimport LocalOfferRoundedIcon from \"@material-ui/icons/LocalOfferRounded\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport * as actions from \"../../store/actions\";\nimport { useLocation } from \"react-router-dom\";\nimport TableSkeleton from \"../common/TableSkeleton\";\nimport CountDown from \"../common/CountDown\";\n\nconst tableHeaders = [\n  {\n    title: i18n.t(\"products:special_price\"),\n    field: \"price\",\n    type: \"numeric\",\n  },\n  {\n    title: <Ttext ns=\"products\" text=\"special_deadline\" />,\n    field: \"deadline\",\n    render: (row) => <CountDown date={new Date(row.deadline)} />,\n    type: \"datetime\",\n    initialEditValue: new Date(),\n  },\n  {\n    title: i18n.t(\"common:status\"),\n    field: \"status\",\n    lookup: {\n      0: i18n.t(\"common:inactive\"),\n      1: i18n.t(\"common:active\"),\n    },\n    initialEditValue: 1,\n  },\n  {\n    title: <Ttext ns=\"products\" text=\"date_added\" />,\n    field: \"created_at\",\n    render: (row) =>\n      format(\n        row ? new Date(row.created_at) : Date.now(),\n        \"yyyy MMMM dd - hh:mm:ss aaaa\",\n        {\n          locale: i18n.language === \"ar\" ? arSA : \"\",\n        }\n      ),\n    editable: \"never\",\n  },\n  {\n    title: <Ttext ns=\"products\" text=\"date_modified\" />,\n    field: \"updated_at\",\n    render: (row) =>\n      format(\n        row ? new Date(row.updated_at) : Date.now(),\n        \"yyyy MMMM dd - hh:mm:ss aaaa\",\n        {\n          locale: i18n.language === \"ar\" ? arSA : \"\",\n        }\n      ),\n    editable: \"never\",\n  },\n];\n\nlet timeout;\n\nconst ProductSpecials = ({ product_id }) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const [mounted, setMounted] = useState(false);\n  const specials = useSelector((state) => state.specials);\n  const tableRef = useRef();\n  const specialsRef = useRef();\n  const { hash } = useLocation();\n\n  const fetchSpecials = useCallback(async () => {\n    try {\n      await dispatch(actions.getSpecials(product_id));\n    } finally {\n      setMounted(true);\n    }\n  }, [dispatch, product_id]);\n\n  useEffect(() => {\n    if (hash === \"#specials\") {\n      specialsRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n        inline: \"center\",\n      });\n    }\n    timeout = setTimeout(() => {\n      fetchSpecials();\n    }, 0);\n\n    return () => clearTimeout(timeout);\n  }, [fetchSpecials, hash]);\n\n  if (!mounted) {\n    return (\n      <Paper ref={specialsRef}>\n        <TableSkeleton row={2} />\n      </Paper>\n    );\n  }\n  if (!specials.loading && specials.errors && !mounted) {\n    return (\n      <Paper>\n        <IconTextNotice\n          Icon={ErrorOutlineIcon}\n          text={specials.errors.message || t(\"common:uncommon_err\")}\n          onTryAgain={() => {\n            setMounted(false);\n            fetchSpecials();\n          }}\n        />\n      </Paper>\n    );\n  }\n\n  const handleRowError = (err) => {\n    let msg = t(\"common:uncommon_err\");\n    if (err.message) {\n      msg = err.message;\n    }\n    if (err.data && err.data.length) {\n      msg = err.data[0] ? err.data[0].msg : msg;\n    }\n    dispatch(actions.fireSnake(\"error\", msg));\n  };\n\n  return (\n    <MaterialTable\n      icons={tableIcons}\n      columns={tableHeaders}\n      tableRef={tableRef}\n      data={specials.specials}\n      title={\n        <Typography ref={specialsRef} variant=\"h6\">\n          {t(\"common:specials\")}\n        </Typography>\n      }\n      editable={{\n        onRowAdd: async (newData) => {\n          try {\n            const data = {\n              product_id: product_id,\n              ...newData,\n            };\n            await dispatch(actions.addSpecial(data));\n          } catch (err) {\n            handleRowError(err);\n            throw err;\n          }\n        },\n        onRowUpdate: async (newData, oldData) => {\n          try {\n            await dispatch(actions.editSpecial(newData));\n          } catch (err) {\n            handleRowError(err);\n            throw err;\n          }\n        },\n        onRowDelete: async (oldData) => {\n          try {\n            await dispatch(actions.deleteSpecial(oldData));\n          } catch (err) {\n            handleRowError(err);\n            throw err;\n          }\n        },\n      }}\n      options={{\n        detailPanelColumnAlignment: \"right\",\n        actionsColumnIndex: -1,\n        draggable: false,\n        emptyRowsWhenPaging: false,\n        search: false,\n        // pageSize: tableSize,\n        // pageSizeOptions: [5, 10, 20, 50],\n        // thirdSortClick: false,\n        debounceInterval: 500,\n        sorting: false,\n      }}\n      localization={{\n        header: {\n          actions: \"\",\n        },\n        body: {\n          editTooltip: t(\"common:edit\"),\n          deleteTooltip: t(\"common:delete\"),\n          addTooltip: t(\"common:add\"),\n          editRow: {\n            cancelTooltip: t(\"common:cancel\"),\n            saveTooltip: t(\"common:confirm\"),\n            deleteText: (\n              <Typography align=\"center\" className=\"bolder\" color=\"error\">\n                {t(\"products:confirm_delete\")}\n              </Typography>\n            ),\n          },\n          emptyDataSourceMessage: specials.loading\n            ? t(\"common:loadingggg\")\n            : !specials.loading &&\n              !specials.errors && (\n                <IconTextNotice\n                  Icon={LocalOfferRoundedIcon}\n                  text={t(\"products:no_specials\")}\n                />\n              ),\n          dateTimePickerLocalization: i18n.language === \"ar\" ? arSA : \"\",\n        },\n        pagination: {\n          labelDisplayedRows: \"{from}-{to} \" + t(\"common:from\") + \" {count}\",\n          labelRowsSelect: t(\"common:perpage\"),\n        },\n      }}\n      isLoading={specials.itemLoading}\n    />\n  );\n};\n\nexport default ProductSpecials;\n","import React, { useEffect, useCallback, Fragment, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProduct, fireSnake } from \"../../store/actions\";\nimport { useTranslation } from \"react-i18next\";\nimport { Typography, Paper, Grid, Chip, Divider } from \"@material-ui/core\";\nimport TableSkeleton from \"../../components/common/TableSkeleton\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport Globals from \"../../util/globals\";\nimport { format } from \"date-fns\";\nimport { arSA } from \"date-fns/locale\";\nimport i18n from \"../../i18n\";\nimport DoneRoundedIcon from \"@material-ui/icons/DoneRounded\";\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\nimport ProductSpecials from \"../../components/Products/ProductSpecials\";\nimport IconTextNotice from \"../../components/common/IconTextNotice\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\n\nconst View = ({ match }) => {\n  const { id } = match.params;\n  const [product, setProduct] = useState(null);\n  const [mounted, setMounted] = useState(false);\n  const dispatch = useDispatch();\n  const products = useSelector((state) => state.products);\n  const { t } = useTranslation();\n\n  const fetchProduct = useCallback(async () => {\n    setMounted(false);\n    try {\n      const fetchedProd = await dispatch(getProduct(id));\n      setProduct(fetchedProd);\n    } catch (err) {\n      let msg = err.message || t(\"products:prod_not_found\");\n      dispatch(fireSnake(\"error\", msg));\n    } finally {\n      setMounted(true);\n    }\n  }, [id, dispatch, t]);\n\n  useEffect(() => {\n    if (id) {\n      fetchProduct();\n    }\n  }, [id, fetchProduct]);\n\n  const getDetails = () => {\n    const details = [];\n    for (const key in product) {\n      if (\n        key === \"product_id\" ||\n        key === \"quantity\" ||\n        key === \"maximum\" ||\n        key === \"minimum\" ||\n        key === \"points\" ||\n        key === \"price\" ||\n        key === \"view\" ||\n        key === \"sold\" ||\n        key === \"weight\"\n      ) {\n        details.push({ key: t(`products:${key}`), value: product[key] });\n      } else if (key.startsWith(\"date_\") || key.startsWith(\"available_\")) {\n        details.push({\n          key: t(`products:${key}`),\n          value: format(\n            new Date(product[key]),\n            \"yyyy MMMM dd - hh:mm:ss aaaa\",\n            {\n              locale: i18n.language === \"ar\" ? arSA : \"\",\n            }\n          ),\n        });\n      } else if (key === \"subtract\") {\n        details.push({\n          key: t(`products:${key}`),\n          value: t(`products:${product[key]}`),\n        });\n      } else if (key === \"status\") {\n        details.push({\n          key: t(`products:${key}`),\n          value: product[key] > 0 ? t(`common:active`) : t(`common:inactive`),\n        });\n      }\n    }\n    return details;\n  };\n  return (\n    <Fragment>\n      <Typography align=\"center\" variant=\"h4\" className=\"py-1\">\n        {t(\"products:product_detail_specials\")}\n      </Typography>\n      {!mounted ? (\n        <TableSkeleton />\n      ) : products.errors ? (\n        <IconTextNotice\n          text={products.errors.message || t(\"common:uncommon_err\")}\n          Icon={ErrorOutlineIcon}\n          onTryAgain={fetchProduct}\n        />\n      ) : (\n        <Fragment>\n          {/* General Info */}\n          <Paper className=\"p\">\n            <Grid container spacing={1}>\n              <Grid item md={4} sm={12} xs={12}>\n                <Paper className=\"p\">\n                  <Carousel\n                    showIndicators={false}\n                    showStatus={false}\n                    infiniteLoop={true}\n                    swipeable={true}\n                    emulateTouch={true}\n                    thumbWidth={35}\n                  >\n                    {product.image.map((img, i) => (\n                      <div key={i}>\n                        <img\n                          alt={product.description[0].title}\n                          src={`${Globals.server}/${img}`}\n                        />\n                      </div>\n                    ))}\n                  </Carousel>\n                </Paper>\n              </Grid>\n\n              <Grid item md={8} sm={12} xs={12}>\n                <Typography variant=\"h6\">\n                  {t(\"products:product_name\")}\n                </Typography>\n                {product.description.map((pd) => (\n                  <Typography\n                    variant=\"caption\"\n                    key={pd.language}\n                    component=\"div\"\n                  >{`${t(`common:${pd.language}`)}: ${\n                    pd.title ? pd.title : t(\"products:nothing\")\n                  }`}</Typography>\n                ))}\n                <Typography variant=\"h6\">\n                  {t(\"products:product_description\")}\n                </Typography>\n                {product.description.map((pd) => (\n                  <Typography\n                    variant=\"caption\"\n                    key={pd.language}\n                    component=\"div\"\n                  >{`${t(`common:${pd.language}`)}: ${\n                    pd.description ? pd.description : t(\"products:nothing\")\n                  }`}</Typography>\n                ))}\n                <Typography variant=\"h6\">\n                  {t(\"products:product_info\")}\n                </Typography>\n                <Grid container spacing={1}>\n                  {getDetails().map((pd, i) => (\n                    <Grid item key={i} xs={6}>\n                      <Typography variant=\"caption\" component=\"div\">\n                        <b>{pd.key}:</b> {pd.value}\n                      </Typography>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n\n          {/* Cats + Filters + options + attributes + wholesales */}\n          <Paper className=\"p my-1\">\n            <Typography variant=\"h6\">{t(\"common:categories\")}</Typography>\n            {!product.categories.length ? (\n              <Typography>{t(\"products:nothing\")}</Typography>\n            ) : (\n              product.categories.map((cat) => (\n                <Chip\n                  key={cat.id}\n                  className=\"xm\"\n                  size=\"small\"\n                  label={cat.title}\n                  icon={\n                    cat.status > 0 ? <DoneRoundedIcon /> : <ClearRoundedIcon />\n                  }\n                  color={cat.status ? \"primary\" : \"secondary\"}\n                  classes={{ label: \"text-smaller\" }}\n                />\n              ))\n            )}\n            <Divider variant=\"middle\" style={{ margin: \"0.5rem 0\" }} />\n\n            <Typography variant=\"h6\">{t(\"common:filters\")}</Typography>\n            {!product.filters.length ? (\n              <Typography>{t(\"products:nothing\")}</Typography>\n            ) : (\n              product.filters.map((filt) => (\n                <Chip\n                  key={filt.id}\n                  className=\"xm\"\n                  size=\"small\"\n                  label={filt.title}\n                  icon={\n                    filt.status > 0 ? <DoneRoundedIcon /> : <ClearRoundedIcon />\n                  }\n                  color={filt.status ? \"primary\" : \"secondary\"}\n                  classes={{ label: \"text-smaller\" }}\n                />\n              ))\n            )}\n            <Divider variant=\"middle\" style={{ margin: \"0.5rem 0\" }} />\n\n            <Typography variant=\"h6\">{t(\"common:attribute\")}</Typography>\n            {!product.attributes.length ? (\n              <Typography>{t(\"products:nothing\")}</Typography>\n            ) : (\n              product.attributes.map((att, i) => (\n                <div key={att.attribute.attribute_id}>\n                  <b>{`${i + 1}) ${att.attribute.title}`}</b>\n                  {att.description.map((ad) => (\n                    <Typography\n                      variant=\"caption\"\n                      component=\"div\"\n                      key={ad.language}\n                    >\n                      {`${t(`common:${ad.language}`)}: ${ad.description}`}\n                    </Typography>\n                  ))}\n                </div>\n              ))\n            )}\n            <Divider variant=\"middle\" style={{ margin: \"0.5rem 0\" }} />\n\n            <Typography variant=\"h6\">\n              {t(\"products:product_options\")}\n            </Typography>\n            {!product.options.length ? (\n              <Typography>{t(\"products:nothing\")}</Typography>\n            ) : (\n              product.options.map((opt, i) => (\n                <div key={opt.option_id}>\n                  <b>{`${i + 1})`}</b>\n                  {opt.description.map((od) => (\n                    <Typography\n                      variant=\"caption\"\n                      component=\"div\"\n                      key={od.language}\n                    >\n                      {`${t(`common:${od.language}`)}: ${od.title}`}\n                    </Typography>\n                  ))}\n                  <Typography variant=\"caption\" component=\"div\">\n                    {`${t(\"common:quantity\")}: ${opt.quantity} - ${t(\n                      \"common:price\"\n                    )}: ${opt.price}`}\n                  </Typography>\n                </div>\n              ))\n            )}\n            <Divider variant=\"middle\" style={{ margin: \"0.5rem 0\" }} />\n\n            <Typography variant=\"h6\">\n              {t(\"products:product_wholesales\")}\n            </Typography>\n            {!product.wholesales.length ? (\n              <Typography>{t(\"products:nothing\")}</Typography>\n            ) : (\n              product.wholesales.map((pw, i) => (\n                <div key={i}>\n                  <b>{`${i + 1}) `}</b>\n                  <Typography variant=\"caption\">{`${t(\"common:quantity\")}: ${\n                    pw.quantity\n                  }  ${t(\"common:price\")}: ${pw.price}`}</Typography>\n                </div>\n              ))\n            )}\n          </Paper>\n\n          {/* Specials */}\n\n          <ProductSpecials product_id={product.product_id} />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default View;\n"],"sourceRoot":""}